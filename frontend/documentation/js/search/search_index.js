var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AddressCreateDto.html",[0,0.599,1,1.139]],["body/interfaces/AddressCreateDto.html",[0,0.803,1,1.221,2,0.775,3,0.152,4,0.132,5,0.132,6,0.564,7,0.522,8,0.564,9,0.195,10,0.559,11,1.789,12,1.209,13,1.051,14,1.909,15,0.822,16,1.789,17,1.789,18,1.789,19,1.694,20,0.673,21,0.031,22,2.658,23,1.573,24,0.447,25,0.659,26,0.714,27,0.714,28,0.714,29,0.61,30,1.924,31,0.714,32,0.714,33,0.714,34,0.522,35,0.8,36,0.714,37,0.714,38,0.195,39,1.851,40,2.083,41,2.083,42,2.389,43,0.61,44,0.47,45,1.94,46,0.61,47,1.474,48,0.659,49,1.129,50,0.967,51,0.302,52,0.61,53,1.29,54,1.984,55,2.293,56,2.251,57,1.43,58,2.329,59,0.642,60,1.43,61,1.43,62,1.43,63,2.204,64,2.027,65,1.909,66,1.652,67,2.56,68,1.144,69,2.005,70,2.005,71,2.005,72,2.286,73,2.005,74,2.205,75,2.117,76,1.909,77,2.149,78,1.43,79,2.005,80,1.635,81,2.005,82,2.005,83,2.509,84,2.005,85,2.005,86,1.851,87,2.005,88,2.005,89,1.144,90,2.131,91,2.005,92,2.005,93,2.005,94,2.36,95,2.457,96,2.005,97,2.005,98,2.005,99,2.005,100,2.329,101,2.457,102,2.204,103,2.476,104,2.437,105,1.909,106,1.909,107,1.789,108,2.005,109,2.005,110,2.005,111,1.851,112,1.923,113,2.005,114,2.083,115,0.714,116,0.714,117,1.909,118,0.714,119,1.43,120,1.221,121,1.144,122,1.144,123,0.714,124,0.714,125,1.144,126,0.714,127,0.714,128,1.43,129,1.392,130,1.635,131,1.635,132,1.635,133,0.642,134,1.43,135,1.635,136,1.144,137,0.714,138,1.144,139,1.144,140,0.714,141,0.714,142,0.976,143,0.714,144,0.714,145,1.144,146,0.714,147,0.714,148,0.714,149,0.714,150,0.714,151,0.714,152,0.714,153,0.714,154,1.144,155,0.714,156,0.564,157,1.144,158,0.66,159,0.714,160,0.976,161,0.714,162,0.714,163,1.144,164,0.714,165,0.714,166,0.714,167,0.61,168,0.714,169,2.005,170,0.714,171,0.714,172,0.61,173,0.659,174,0.714,175,0.714,176,0.714,177,0.714,178,0.714,179,0.659,180,0.61,181,0.976,182,0.714,183,1.056,184,0.022,185,0.714,186,0.714,187,0.714,188,0.714,189,0.714,190,0.714,191,0.714,192,0.714,193,1.056,194,0.659,195,0.714,196,0.714,197,0.714,198,1.056,199,0.659,200,0.714,201,0.714,202,0.714,203,0.659,204,0.714,205,0.714,206,1.144,207,0.714,208,0.714,209,0.714,210,0.714,211,0.714,212,0.714,213,0.013,214,0.008]],["title/interfaces/AddressDto.html",[0,0.599,142,1.139]],["body/interfaces/AddressDto.html",[0,0.797,1,0.965,2,0.764,3,0.15,4,0.13,5,0.13,6,0.556,7,0.514,8,0.556,9,0.193,10,0.553,11,1.776,12,1.2,13,1.207,14,1.897,15,0.818,16,1.776,17,1.776,18,1.776,19,1.695,20,0.685,21,0.031,22,2.696,23,1.568,24,0.444,25,0.65,26,0.704,27,0.704,28,0.704,29,0.601,30,1.918,31,0.704,32,0.704,33,0.704,34,0.514,35,0.793,36,0.704,37,0.704,38,0.193,39,1.84,40,2.072,41,2.072,42,2.381,43,0.601,44,0.468,45,1.935,46,0.601,47,1.469,48,0.65,49,1.119,50,0.957,51,0.3,52,0.601,53,1.282,54,1.974,55,2.284,56,2.242,57,1.417,58,2.32,59,0.635,60,1.417,61,1.417,62,1.417,63,2.194,64,2.026,65,1.897,66,1.64,67,2.555,68,1.131,69,1.993,70,1.993,71,1.993,72,2.28,73,1.993,74,2.198,75,2.108,76,1.897,77,2.138,78,1.417,79,1.993,80,1.622,81,1.993,82,1.993,83,2.502,84,1.993,85,1.993,86,1.84,87,1.993,88,1.993,89,1.131,90,2.129,91,1.993,92,1.993,93,1.993,94,2.352,95,2.45,96,1.993,97,1.993,98,1.993,99,1.993,100,2.32,101,2.45,102,2.194,103,2.469,104,2.429,105,1.897,106,1.897,107,1.776,108,1.993,109,1.993,110,1.993,111,1.84,112,1.913,113,1.993,114,2.072,115,0.704,116,0.704,117,1.897,118,0.704,119,1.417,120,1.209,121,1.131,122,1.131,123,0.704,124,0.704,125,1.131,126,0.704,127,0.704,128,1.417,129,1.424,130,1.622,131,1.622,132,1.622,133,0.635,134,1.417,135,1.622,136,1.131,137,0.704,138,1.131,139,1.131,140,0.704,141,0.704,142,1.209,143,0.704,144,0.704,145,1.131,146,0.704,147,0.704,148,0.704,149,0.704,150,0.704,151,0.704,152,0.704,153,0.704,154,1.131,155,0.704,156,0.556,157,1.131,158,0.652,159,0.704,160,0.965,161,0.704,162,0.704,163,1.131,164,0.704,165,0.704,166,0.704,167,0.601,168,0.704,169,1.993,170,0.704,171,0.704,172,0.601,173,0.65,174,0.704,175,0.704,176,0.704,177,0.704,178,0.704,179,0.65,180,0.601,181,0.965,182,0.704,183,1.044,184,0.022,185,0.704,186,0.704,187,0.704,188,0.704,189,0.704,190,0.704,191,0.704,192,0.704,193,1.044,194,0.65,195,0.704,196,0.704,197,0.704,198,1.044,199,0.65,200,0.704,201,0.704,202,0.704,203,0.65,204,0.704,205,0.704,206,1.131,207,0.704,208,0.704,209,0.704,210,0.704,211,0.704,212,0.704,213,0.012,214,0.008]],["title/injectables/AddressesService.html",[35,0.652,52,1.139]],["body/injectables/AddressesService.html",[0,0.774,1,1.338,3,0.142,4,0.123,5,0.123,6,1.855,7,1.716,8,0.525,9,0.182,10,0.528,11,1.079,12,0.729,13,1.149,14,1.362,15,0.951,16,1.079,17,1.079,18,1.079,19,1.669,20,0.726,21,0.031,22,2.627,23,1.587,24,0.429,25,0.613,26,0.664,27,0.664,28,0.664,29,0.567,30,2.017,31,0.664,32,0.664,33,0.664,34,0.485,35,0.767,36,0.664,37,0.664,38,0.182,39,1.989,40,2.028,41,2.028,42,2.533,43,0.567,44,0.46,45,1.913,46,0.567,47,1.449,48,0.613,49,1.076,50,0.921,51,0.29,52,0.921,53,1.456,54,2.075,55,2.376,56,2.507,57,1.725,58,2.286,59,0.703,60,1.362,61,1.362,62,1.362,63,2.154,64,2.021,65,2.204,66,1.797,67,2.533,68,1.079,69,1.946,70,1.946,71,1.946,72,2.327,73,1.946,74,2.169,75,2.075,76,1.847,77,2.096,78,1.362,79,1.946,80,1.568,81,1.946,82,1.946,83,2.477,84,1.946,85,1.946,86,1.797,87,1.946,88,1.946,89,1.362,90,2.119,91,1.946,92,1.946,93,1.946,94,2.319,95,2.422,96,1.946,97,1.946,98,1.946,99,1.946,100,2.286,101,2.422,102,2.154,103,2.442,104,2.4,105,1.847,106,1.847,107,1.725,108,1.946,109,1.946,110,1.946,111,1.797,112,1.872,113,1.946,114,2.028,115,1.079,116,1.079,117,1.847,118,0.664,119,1.362,120,1.163,121,1.079,122,1.079,123,1.079,124,0.664,125,1.079,126,0.664,127,1.079,128,1.362,129,1.419,130,1.568,131,1.568,132,1.568,133,1.077,134,1.362,135,1.568,136,1.079,137,1.079,138,1.079,139,1.079,140,1.079,141,1.079,142,1.338,143,0.664,144,0.664,145,1.079,146,1.079,147,0.664,148,0.664,149,0.664,150,0.664,151,1.079,152,1.079,153,0.664,154,1.079,155,1.079,156,0.525,157,1.079,158,0.622,159,0.664,160,0.921,161,0.664,162,0.664,163,1.079,164,0.664,165,0.664,166,0.664,167,0.567,168,0.664,169,1.946,170,0.664,171,0.664,172,0.567,173,0.613,174,0.664,175,0.664,176,0.664,177,0.664,178,0.664,179,0.613,180,0.567,181,0.921,182,0.664,183,0.996,184,0.021,185,0.664,186,0.664,187,0.664,188,0.664,189,0.664,190,0.664,191,0.664,192,0.664,193,0.996,194,0.613,195,0.664,196,0.664,197,0.664,198,0.996,199,0.613,200,0.664,201,0.664,202,0.664,203,0.613,204,0.664,205,0.664,206,1.079,207,0.664,208,0.664,209,0.664,210,0.664,211,0.664,212,0.664,213,0.012,214,0.007,215,0.858,216,0.788,217,2.184,218,2.606,219,2.606,220,2.606,221,2.184,222,2.606,223,2.606,224,2.606,225,2.606,226,0.525,227,1.045,228,2.606,229,1.701,230,1.045,231,1.605,232,1.456,233,1.605,234,1.605,235,1.605,236,1.605,237,1.605,238,1.605,239,1.605,240,1.605,241,1.605,242,1.605,243,1.605,244,1.605,245,1.605,246,0.525]],["title/components/AppComponent.html",[247,0.769,248,1.232]],["body/components/AppComponent.html",[3,0.371,4,0.321,5,0.321,9,0.475,10,1.058,15,0.888,19,1.085,20,0.531,21,0.031,24,0.475,38,0.475,44,0.371,50,1.462,51,0.321,59,0.779,120,1.483,133,0.779,158,1.002,184,0.019,213,0.024,214,0.019,246,1.371,247,1.359,248,2.278,249,2.556,250,2.243,251,2.243,252,2.243,253,2.243,254,3.515,255,2.243,256,3.425,257,2.879,258,2.794,259,5.693,260,2.794,261,5.227,262,5.693,263,5.227,264,5.227,265,4.196,266,5.959,267,5.959,268,5.959,269,5.227,270,4.379,271,2.004,272,5.227,273,5.227,274,5.959,275,5.959,276,4.196,277,5.693,278,4.196,279,3.515,280,4.196,281,4.379,282,4.196,283,5.227,284,5.227,285,4.196,286,5.227,287,5.227,288,4.196,289,4.196,290,4.196,291,4.196,292,4.196,293,3.515,294,4.196,295,5.227,296,3.501,297,3.881,298,4.196,299,4.196,300,4.196,301,5.227,302,5.227,303,5.227,304,5.227,305,3.515,306,4.196,307,4.196,308,4.379,309,3.515,310,4.196,311,4.196,312,4.196,313,4.196,314,1.737,315,2.794,316,2.556,317,2.243,318,3.185,319,2.243,320,2.243,321,1.483,322,2.243,323,1.483,324,2.243,325,1.483,326,2.243,327,1.483,328,2.243,329,1.483,330,2.243,331,2.243]],["title/modules/AppModule.html",[332,1.448,333,2.099]],["body/modules/AppModule.html",[3,0.388,4,0.337,5,0.337,21,0.031,24,0.749,38,0.498,43,1.554,44,0.388,51,0.337,184,0.02,213,0.025,214,0.02,248,2.527,257,1.976,314,1.82,327,2.234,329,2.234,332,1.976,333,4.365,334,1.976,335,2.583,336,4.25,337,3.786,338,3.504,339,2.35,340,3.684,341,3.684,342,3.684,343,3.684,344,3.715,345,3.715,346,3.379,347,3.933,348,3.214,349,2.864,350,4.397,351,3.161,352,3.161,353,4.508,354,4.508,355,2.35,356,5.38,357,4.508,358,2.864,359,3.684,360,4.397,361,3.684,362,5.38,363,5.38,364,4.397,365,3.684,366,5.38,367,3.684,368,3.684,369,4.397,370,3.684]],["title/classes/AppPage.html",[51,0.247,371,2.356]],["body/classes/AppPage.html",[3,0.441,4,0.383,5,0.383,9,0.566,21,0.031,24,0.566,44,0.441,50,1.398,51,0.383,64,1.756,120,1.766,133,1.078,184,0.023,213,0.027,214,0.023,216,1.756,232,1.625,316,2.444,358,3.254,371,4.245,372,3.653,373,4.187,374,6.319,375,6.319,376,4.997,377,4.997,378,4.187,379,4.997,380,5.807,381,4.997,382,4.997]],["title/modules/AppRoutingModule.html",[332,1.448,344,1.894]],["body/modules/AppRoutingModule.html",[3,0.433,4,0.375,5,0.375,21,0.031,24,0.711,38,0.555,44,0.433,45,1.601,51,0.375,158,1.169,184,0.022,213,0.026,214,0.022,247,1.37,271,1.601,327,2.028,329,2.028,334,2.2,339,2.617,344,3.372,351,2.877,352,3.372,361,4.103,370,4.103,383,4.897,384,4.103,385,3.254,386,4.808,387,2.395,388,5.1,389,4.897,390,4.897,391,4.897,392,4.897]],["title/injectables/AuthService.html",[35,0.652,156,1.054]],["body/injectables/AuthService.html",[0,0.797,1,0.965,3,0.15,4,0.13,5,0.13,6,1.574,7,1.456,8,0.556,9,0.192,10,0.553,11,1.13,12,0.764,13,1.013,14,1.416,15,0.818,16,1.13,17,1.13,18,1.13,19,1.672,20,0.653,21,0.031,22,2.643,23,1.515,24,0.444,25,0.65,26,0.704,27,0.704,28,0.704,29,0.601,30,1.949,31,0.704,32,0.704,33,0.704,34,0.514,35,0.793,36,0.704,37,0.704,38,0.192,39,2.026,40,2.072,41,2.072,42,2.429,43,0.601,44,0.468,45,1.935,46,0.601,47,1.469,48,0.65,49,1.118,50,0.957,51,0.3,52,0.601,53,1.483,54,2.108,55,2.406,56,2.381,57,1.776,58,2.32,59,0.727,60,1.416,61,1.416,62,1.416,63,2.194,64,2.026,65,1.896,66,1.64,67,2.555,68,1.13,69,1.993,70,1.993,71,1.993,72,2.296,73,1.993,74,2.198,75,2.108,76,1.896,77,2.138,78,1.416,79,1.993,80,1.622,81,1.993,82,1.993,83,2.502,84,1.993,85,1.993,86,1.84,87,1.993,88,1.993,89,1.13,90,2.129,91,1.993,92,1.993,93,1.993,94,2.352,95,2.45,96,1.993,97,1.993,98,1.993,99,1.993,100,2.32,101,2.45,102,2.194,103,2.469,104,2.429,105,1.896,106,1.896,107,1.776,108,1.993,109,1.993,110,1.993,111,1.84,112,1.913,113,1.993,114,2.072,115,0.704,116,0.704,117,1.896,118,0.704,119,1.416,120,1.209,121,1.13,122,1.13,123,0.704,124,0.704,125,1.13,126,0.704,127,0.704,128,1.416,129,1.388,130,1.622,131,1.622,132,1.622,133,0.959,134,1.416,135,1.622,136,1.13,137,0.704,138,1.13,139,1.13,140,0.704,141,0.704,142,0.965,143,0.704,144,0.704,145,1.13,146,0.704,147,0.704,148,0.704,149,0.704,150,0.704,151,0.704,152,0.704,153,0.704,154,1.13,155,0.704,156,0.892,157,1.416,158,1.024,159,1.13,160,1.384,161,0.704,162,0.704,163,1.13,164,1.13,165,0.704,166,0.704,167,0.601,168,0.704,169,1.993,170,0.704,171,0.704,172,0.601,173,0.65,174,0.704,175,0.704,176,0.704,177,0.704,178,0.704,179,0.65,180,0.601,181,0.965,182,0.704,183,1.043,184,0.022,185,0.704,186,0.704,187,0.704,188,0.704,189,0.704,190,0.704,191,0.704,192,0.704,193,1.043,194,0.65,195,0.704,196,0.704,197,0.704,198,1.043,199,0.65,200,0.704,201,0.704,202,0.704,203,0.65,204,0.704,205,0.704,206,1.13,207,0.704,208,0.704,209,0.704,210,0.704,211,0.704,212,0.704,213,0.012,214,0.008,215,0.909,216,0.826,226,0.556,227,1.107,229,1.118,230,1.107,232,0.764,246,0.556,393,2.73,394,2.73,395,1.7,396,1.7,397,1.7,398,1.7,399,1.7]],["title/interfaces/Contact.html",[0,0.599,400,1.139]],["body/interfaces/Contact.html",[0,1.044,2,2.125,3,0.418,4,0.362,5,0.362,9,0.535,10,1.138,12,1.323,13,1.138,19,1.753,20,0.833,21,0.031,23,1.678,44,0.496,59,0.878,129,1.482,184,0.022,213,0.026,214,0.022,400,1.986,401,3.456,402,3.318,403,5.201,404,4.042,405,3.318,406,4.042,407,3.318,408,4.71,409,3.079,410,2.778,411,2.778,412,2.778,413,3.456]],["title/components/ContactsAddComponent.html",[247,0.769,321,1.139]],["body/components/ContactsAddComponent.html",[3,0.314,4,0.272,5,0.272,9,0.403,10,0.952,12,1.473,13,0.72,15,0.894,20,0.666,21,0.031,24,0.634,38,0.403,44,0.314,47,0.92,51,0.272,53,0.995,59,1.175,86,1.797,90,1.537,133,1.111,158,0.849,184,0.016,213,0.021,214,0.016,216,1.422,226,1.163,229,1.163,232,1.315,246,1.537,247,1.257,248,1.36,249,2.299,250,1.901,251,1.901,252,1.901,253,1.901,255,1.901,256,3.311,257,2.784,258,2.513,260,2.513,271,2.069,296,2.762,297,2.317,314,1.473,315,2.513,316,2.299,317,1.901,318,2.994,319,1.901,320,1.901,321,1.979,322,1.901,323,1.257,324,1.901,325,1.257,326,1.901,327,1.257,328,1.901,329,1.257,330,1.901,331,1.901,355,1.901,400,2.157,402,2.994,404,3.648,405,2.513,406,3.062,407,2.513,409,3.648,410,2.762,411,2.762,412,2.762,413,4.374,414,3.262,415,3.975,416,2.98,417,2.513,418,3.094,419,3.849,420,5.266,421,4.701,422,4.412,423,5.266,424,4.095,425,3.291,426,2.98,427,4.694,428,4.694,429,2.994,430,3.557,431,3.939,432,3.557,433,2.814,434,3.557,435,3.557,436,4.694,437,3.437,438,3.939,439,3.939,440,4.701,441,4.701,442,4.701,443,4.701,444,4.701,445,4.701,446,4.701,447,4.701,448,4.701,449,4.701,450,4.701,451,4.701,452,4.701,453,4.701,454,4.701,455,4.701,456,4.701,457,4.701,458,3.557,459,4.694,460,5.602,461,5.602,462,3.557,463,2.6,464,2.09,465,2.6,466,3.557,467,3.557,468,3.557,469,3.557,470,3.557,471,3.557,472,1.901,473,2.98,474,3.557,475,3.557,476,4.881,477,2.98,478,3.557,479,3.557,480,4.701,481,3.939,482,4.701,483,4.701,484,3.939,485,4.701,486,3.939,487,3.437,488,3.939,489,2.98,490,2.98]],["title/components/ContactsDetailComponent.html",[247,0.769,323,1.139]],["body/components/ContactsDetailComponent.html",[3,0.349,4,0.303,5,0.303,9,0.448,10,1.019,13,0.8,15,0.941,20,0.637,21,0.031,24,0.66,38,0.448,44,0.349,51,0.303,53,1.106,59,1.083,90,1.646,133,1.119,158,0.944,184,0.018,213,0.023,214,0.018,216,1.523,226,1.293,229,1.293,232,1.409,246,1.293,247,1.323,248,1.511,249,2.462,250,2.113,251,2.113,252,2.113,253,2.113,255,2.113,256,3.385,257,2.846,258,2.691,260,2.691,271,2.107,297,2.575,314,1.637,315,2.691,316,2.462,317,2.113,318,3.117,319,2.113,320,2.113,321,1.397,322,2.113,323,2.061,324,2.113,325,1.397,326,2.113,327,1.397,328,2.113,329,1.397,330,2.113,331,2.113,355,2.113,387,1.934,400,2.176,402,3.117,405,2.691,407,2.691,410,2.958,411,2.958,412,2.958,414,3.291,417,2.691,418,3.255,422,4.642,425,3.427,426,3.313,427,4.887,431,4.219,433,2.961,436,4.887,437,3.681,438,4.219,439,4.219,463,2.891,464,2.323,472,2.113,476,5.046,477,3.313,484,4.219,486,4.219,487,3.681,488,4.219,489,3.313,490,3.313,491,4.01,492,3.313,493,3.279,494,5.54,495,5.035,496,5.832,497,4.05,498,4.887,499,3.954,500,3.954,501,3.954,502,3.954,503,3.954,504,3.954,505,3.954,506,3.313,507,3.313,508,3.954,509,3.954,510,5.035]],["title/guards/ContactsDetailResolverService.html",[511,2.356,512,2.099]],["body/guards/ContactsDetailResolverService.html",[3,0.4,4,0.347,5,0.347,9,0.513,13,1.109,15,0.93,20,0.693,21,0.031,24,0.721,25,1.731,29,1.6,30,2.048,34,1.37,35,1.109,38,0.513,44,0.4,45,1.48,49,1.48,50,1.267,51,0.347,53,1.267,64,1.781,66,1.731,129,1.308,133,1.017,184,0.021,213,0.025,214,0.021,216,1.657,226,1.48,229,1.79,232,1.267,387,2.215,400,1.935,414,3.148,417,2.42,429,3.27,464,2.661,465,3.31,472,2.42,473,3.794,493,3.835,497,3.31,512,3.567,513,4.529,514,3.794,515,5.126,516,4.529,517,5.397,518,4.529,519,5.478,520,5.478,521,6.119,522,5.889,523,6.119,524,4.529,525,5.478,526,4.529,527,4.529,528,4.529,529,4.529,530,4.529]],["title/components/ContactsListComponent.html",[247,0.769,325,1.139]],["body/components/ContactsListComponent.html",[3,0.355,4,0.308,5,0.308,9,0.455,10,1.03,13,1.03,15,0.996,20,0.742,21,0.031,23,1.562,24,0.685,30,1.825,34,1.216,38,0.455,44,0.355,51,0.308,59,0.746,129,0.96,133,1.148,158,0.96,184,0.018,213,0.023,214,0.018,216,1.539,217,4.263,226,1.314,229,1.663,232,1.562,246,1.314,247,1.333,248,1.536,249,2.488,250,2.148,251,2.148,252,2.148,253,2.148,255,2.148,256,3.396,257,2.855,258,2.719,260,2.719,271,2.146,293,4.263,314,1.664,315,2.719,316,2.488,317,2.148,318,3.136,319,2.148,320,2.148,321,1.42,322,2.148,323,1.42,324,2.148,325,2.073,326,2.148,327,1.42,328,2.148,329,1.42,330,2.148,331,2.148,385,2.148,387,1.966,400,1.42,402,3.136,405,3.136,407,3.136,414,3.357,417,2.719,418,3.28,419,3.719,424,4.289,425,3.447,428,4.263,429,3.136,433,2.984,464,2.361,465,2.938,472,2.148,481,4.263,487,3.719,506,3.367,531,4.09,532,3.367,533,5.582,534,5.088,535,5.582,536,5.088,537,4.019,538,5.088,539,4.019,540,5.088,541,4.019,542,4.019,543,4.019,544,5.088,545,4.019,546,4.019,547,4.019,548,5.088,549,5.088,550,5.088,551,5.088,552,5.088,553,5.088]],["title/modules/ContactsModule.html",[332,1.448,345,1.894]],["body/modules/ContactsModule.html",[3,0.402,4,0.349,5,0.349,21,0.031,24,0.742,38,0.516,44,0.402,51,0.349,184,0.021,213,0.025,214,0.021,271,2.004,314,1.887,321,2.253,323,2.253,325,2.253,332,2.047,334,2.047,335,2.677,336,4.316,337,2.967,338,2.967,339,2.436,345,3.925,346,3.408,347,4.019,348,3.331,349,2.967,351,3.23,352,3.23,353,4.607,354,4.607,355,2.436,359,3.818,365,3.818,415,2.967,491,2.967,531,2.967,554,3.818,555,3.818,556,3.818,557,3.746,558,4.557,559,5.498,560,3.818,561,3.818,562,3.818,563,3.818,564,5.498,565,4.557]],["title/modules/ContactsRoutingModule.html",[332,1.448,557,1.894]],["body/modules/ContactsRoutingModule.html",[3,0.417,4,0.362,5,0.362,21,0.031,24,0.728,38,0.535,44,0.417,45,1.544,51,0.362,129,1.341,184,0.022,213,0.026,214,0.022,247,1.431,271,2.028,321,1.985,323,1.985,325,1.985,334,2.122,338,3.076,339,2.525,351,2.775,352,3.3,384,3.957,385,3.003,386,4.707,387,2.31,388,5.024,400,1.669,414,2.525,415,3.076,419,4.107,491,3.076,493,3.076,512,3.905,515,3.957,531,3.076,557,3.3,561,3.957,562,3.957,563,3.957,566,4.723,567,4.723,568,4.723,569,4.723,570,4.723,571,4.723]],["title/injectables/ContactsService.html",[35,0.652,429,1.723]],["body/injectables/ContactsService.html",[3,0.391,4,0.339,5,0.339,9,0.501,10,1.094,13,1.094,15,0.918,19,1.508,20,0.768,21,0.031,23,1.699,24,0.705,29,1.565,34,1.339,35,1.094,38,0.501,44,0.391,47,1.397,49,1.447,50,1.239,51,0.339,53,1.631,59,1.003,64,1.634,129,1.29,133,1.176,184,0.02,194,2.229,213,0.025,214,0.02,215,2.367,216,1.634,226,1.906,229,1.766,232,1.631,246,1.766,271,2.035,400,2.2,424,3.95,429,2.888,433,2.367,464,2.602,572,3.71,573,5.832,574,5.404,575,6.072,576,5.404,577,5.404,578,4.428,579,5.404,580,4.428,581,4.428,582,5.832,583,5.404,584,5.404,585,4.428,586,4.428,587,4.428,588,4.428,589,4.428,590,4.428,591,4.428,592,5.404,593,4.428,594,4.428,595,4.428]],["title/interfaces/Country.html",[0,0.599,12,0.902]],["body/interfaces/Country.html",[0,1.071,2,2.218,3,0.436,4,0.378,5,0.378,9,0.559,10,1.167,12,1.613,19,1.745,20,0.729,21,0.03,23,1.381,44,0.509,59,1.169,129,1.178,184,0.023,213,0.026,214,0.023,400,1.744,401,3.608,402,2.638,403,4.135,404,3.214,405,2.638,406,3.214,407,2.638,409,3.214,410,2.9,411,2.9,412,2.9,413,4.601]],["title/interfaces/CredentialsDto.html",[0,0.599,160,1.139]],["body/interfaces/CredentialsDto.html",[0,0.81,1,0.991,2,0.79,3,0.155,4,0.135,5,0.135,6,0.575,7,0.532,8,0.575,9,0.199,10,0.568,11,1.161,12,0.784,13,0.883,14,1.448,15,0.829,16,1.161,17,1.161,18,1.161,19,1.68,20,0.552,21,0.031,22,2.64,23,1.529,24,0.452,25,0.672,26,0.728,27,0.728,28,0.728,29,0.621,30,1.931,31,0.728,32,0.728,33,0.728,34,0.532,35,0.808,36,0.728,37,0.728,38,0.199,39,1.865,40,2.097,41,2.097,42,2.398,43,0.621,44,0.473,45,1.947,46,0.621,47,1.481,48,0.672,49,1.144,50,0.979,51,0.306,52,0.621,53,1.301,54,1.996,55,2.304,56,2.263,57,1.448,58,2.339,59,0.65,60,1.448,61,1.448,62,1.448,63,2.217,64,2.029,65,1.925,66,1.667,67,2.567,68,1.161,69,2.02,70,2.02,71,2.02,72,2.294,73,2.02,74,2.214,75,2.127,76,1.925,77,2.162,78,1.448,79,2.02,80,1.653,81,2.02,82,2.02,83,2.516,84,2.02,85,2.02,86,1.865,87,2.02,88,2.02,89,1.161,90,2.134,91,2.02,92,2.02,93,2.02,94,2.371,95,2.466,96,2.02,97,2.02,98,2.02,99,2.02,100,2.339,101,2.466,102,2.217,103,2.484,104,2.446,105,1.925,106,1.925,107,1.806,108,2.02,109,2.02,110,2.02,111,1.865,112,1.936,113,2.02,114,2.097,115,0.728,116,0.728,117,1.925,118,0.728,119,1.448,120,1.236,121,1.161,122,1.161,123,0.728,124,0.728,125,1.161,126,0.728,127,0.728,128,1.448,129,1.397,130,1.653,131,1.653,132,1.653,133,0.65,134,1.448,135,1.653,136,1.161,137,0.728,138,1.161,139,1.161,140,0.728,141,0.728,142,0.991,143,0.728,144,0.728,145,1.161,146,0.728,147,0.728,148,0.728,149,0.728,150,0.728,151,0.728,152,0.728,153,0.728,154,1.161,155,0.728,156,0.575,157,1.161,158,0.669,159,0.728,160,1.236,161,0.728,162,0.728,163,1.161,164,0.728,165,0.728,166,0.728,167,0.621,168,0.728,169,2.02,170,0.728,171,0.728,172,0.621,173,0.672,174,0.728,175,0.728,176,0.728,177,0.728,178,0.728,179,1.526,180,0.621,181,0.991,182,0.728,183,1.072,184,0.022,185,0.728,186,0.728,187,0.728,188,0.728,189,0.728,190,0.728,191,0.728,192,0.728,193,1.072,194,0.672,195,0.728,196,0.728,197,0.728,198,1.072,199,0.672,200,0.728,201,0.728,202,0.728,203,0.672,204,0.728,205,0.728,206,1.161,207,0.728,208,0.728,209,0.728,210,0.728,211,0.728,212,0.728,213,0.013,214,0.008]],["title/interfaces/EducationalOpportunityDto.html",[0,0.599,180,1.139]],["body/interfaces/EducationalOpportunityDto.html",[0,0.806,1,0.983,2,0.782,3,0.154,4,0.133,5,0.133,6,0.569,7,0.526,8,0.569,9,0.197,10,0.563,11,1.151,12,0.778,13,1.053,14,1.916,15,0.825,16,1.151,17,1.151,18,1.151,19,1.678,20,0.614,21,0.031,22,2.66,23,1.617,24,0.449,25,0.665,26,0.72,27,0.72,28,0.72,29,0.615,30,1.927,31,0.72,32,0.72,33,0.72,34,0.526,35,0.803,36,0.72,37,0.72,38,0.197,39,1.857,40,2.09,41,2.09,42,2.393,43,0.615,44,0.471,45,1.943,46,0.615,47,1.477,48,0.665,49,1.136,50,0.972,51,0.304,52,0.615,53,1.295,54,1.989,55,2.298,56,2.257,57,1.438,58,2.333,59,0.645,60,1.438,61,1.438,62,1.438,63,2.21,64,2.028,65,1.916,66,1.659,67,2.563,68,1.151,69,2.012,70,2.012,71,2.012,72,2.289,73,2.012,74,2.209,75,2.121,76,1.916,77,2.155,78,1.438,79,2.012,80,1.643,81,2.012,82,2.012,83,2.512,84,2.012,85,2.012,86,1.857,87,2.012,88,2.012,89,1.151,90,2.133,91,2.012,92,2.012,93,2.012,94,2.365,95,2.461,96,2.012,97,2.012,98,2.012,99,2.012,100,2.333,101,2.461,102,2.21,103,2.48,104,2.441,105,1.916,106,1.916,107,1.797,108,2.012,109,2.012,110,2.012,111,1.857,112,1.929,113,2.012,114,2.09,115,0.72,116,0.72,117,1.916,118,0.72,119,1.438,120,1.228,121,1.151,122,1.151,123,0.72,124,0.72,125,1.151,126,0.72,127,0.72,128,1.438,129,1.43,130,1.643,131,1.643,132,1.643,133,0.645,134,1.438,135,1.643,136,1.151,137,0.72,138,1.151,139,1.151,140,0.72,141,0.72,142,0.983,143,0.72,144,0.72,145,1.151,146,0.72,147,0.72,148,0.72,149,0.72,150,0.72,151,0.72,152,0.72,153,0.72,154,1.151,155,0.72,156,0.569,157,1.151,158,0.664,159,0.72,160,0.983,161,0.72,162,0.72,163,1.151,164,0.72,165,0.72,166,0.72,167,0.615,168,0.72,169,2.21,170,0.72,171,0.72,172,0.615,173,0.665,174,0.72,175,0.72,176,0.72,177,0.72,178,0.72,179,0.665,180,0.983,181,0.983,182,0.72,183,1.063,184,0.022,185,0.72,186,0.72,187,0.72,188,0.72,189,0.72,190,0.72,191,0.72,192,0.72,193,1.063,194,0.665,195,0.72,196,0.72,197,0.72,198,1.063,199,0.665,200,0.72,201,0.72,202,0.72,203,0.665,204,0.72,205,0.72,206,1.151,207,0.72,208,0.72,209,0.72,210,0.72,211,0.72,212,0.72,213,0.013,214,0.008]],["title/injectables/EducationalOpportunityService.html",[35,0.652,167,1.139]],["body/injectables/EducationalOpportunityService.html",[0,0.796,1,0.963,3,0.15,4,0.13,5,0.13,6,1.572,7,1.455,8,0.555,9,0.192,10,0.552,11,1.128,12,0.763,13,1.045,14,1.62,15,0.817,16,1.128,17,1.128,18,1.128,19,1.672,20,0.653,21,0.031,22,2.654,23,1.567,24,0.443,25,0.648,26,0.702,27,0.702,28,0.702,29,0.599,30,1.949,31,0.702,32,0.702,33,0.702,34,0.513,35,0.792,36,0.702,37,0.702,38,0.192,39,2.024,40,2.071,41,2.071,42,2.428,43,0.599,44,0.468,45,1.934,46,0.599,47,1.468,48,0.648,49,1.117,50,0.956,51,0.3,52,0.599,53,1.482,54,2.107,55,2.405,56,2.38,57,1.774,58,2.319,59,0.727,60,1.415,61,1.415,62,1.415,63,2.193,64,2.026,65,1.991,66,1.749,67,2.554,68,1.128,69,1.991,70,1.991,71,1.991,72,2.295,73,1.991,74,2.197,75,2.107,76,1.895,77,2.137,78,1.415,79,1.991,80,1.62,81,1.991,82,1.991,83,2.501,84,1.991,85,1.991,86,1.839,87,1.991,88,1.991,89,1.415,90,2.128,91,1.991,92,1.991,93,1.991,94,2.351,95,2.449,96,1.991,97,1.991,98,1.991,99,1.991,100,2.319,101,2.449,102,2.193,103,2.468,104,2.428,105,1.895,106,1.895,107,1.774,108,1.991,109,1.991,110,1.991,111,1.839,112,1.912,113,1.991,114,2.071,115,0.702,116,0.702,117,1.895,118,0.702,119,1.415,120,1.207,121,1.128,122,1.128,123,0.702,124,0.702,125,1.128,126,0.702,127,0.702,128,1.415,129,1.387,130,1.62,131,1.62,132,1.62,133,0.958,134,1.415,135,1.62,136,1.128,137,0.702,138,1.128,139,1.128,140,0.702,141,0.702,142,0.963,143,0.702,144,0.702,145,1.128,146,0.702,147,0.702,148,0.702,149,0.702,150,0.702,151,0.702,152,0.702,153,0.702,154,1.128,155,0.702,156,0.555,157,1.128,158,0.651,159,0.702,160,0.963,161,0.702,162,0.702,163,1.128,164,0.702,165,0.702,166,0.702,167,0.963,168,0.702,169,2.071,170,1.128,171,0.702,172,0.599,173,0.648,174,0.702,175,0.702,176,0.702,177,0.702,178,0.702,179,0.648,180,0.599,181,0.963,182,0.702,183,1.042,184,0.022,185,0.702,186,0.702,187,0.702,188,0.702,189,0.702,190,0.702,191,0.702,192,0.702,193,1.042,194,0.648,195,0.702,196,0.702,197,0.702,198,1.042,199,0.648,200,0.702,201,0.702,202,0.702,203,0.648,204,0.702,205,0.702,206,1.128,207,0.702,208,0.702,209,0.702,210,0.702,211,0.702,212,0.702,213,0.012,214,0.008,215,0.907,216,0.824,221,2.284,226,0.555,227,1.105,229,1.117,230,1.775,232,0.763,246,0.555,596,2.726,597,1.697,598,1.697,599,1.697,600,1.697]],["title/components/HomeComponent.html",[247,0.769,327,1.139]],["body/components/HomeComponent.html",[3,0.381,4,0.33,5,0.33,9,0.489,10,1.077,15,1.05,19,1.116,20,0.673,21,0.031,23,1.207,24,0.489,38,0.489,44,0.381,51,0.33,59,0.988,133,1.148,158,1.03,184,0.02,213,0.024,214,0.02,216,1.609,226,1.885,232,1.488,246,1.738,247,1.376,248,1.649,249,2.601,250,2.306,251,2.306,252,2.306,253,2.306,255,2.306,256,3.443,257,2.894,258,2.843,260,2.843,270,4.456,271,2.02,296,3.125,314,1.787,315,2.843,316,2.601,317,2.306,318,3.217,319,2.306,320,2.306,321,1.525,322,2.306,323,1.525,324,2.306,325,1.525,326,2.306,327,2.126,328,2.306,329,1.525,330,2.306,331,2.306,417,2.843,418,3.387,425,3.536,433,2.843,601,3.615,602,5.319,603,5.765,604,5.319,605,5.273,606,5.765,607,6.018,608,5.319,609,4.315,610,4.315,611,4.315,612,4.315,613,6.018,614,5.319,615,5.319,616,5.319,617,5.319,618,5.319,619,5.319,620,5.319,621,4.456]],["title/injectables/HttpService.html",[35,0.652,622,2.356]],["body/injectables/HttpService.html",[3,0.436,4,0.378,5,0.378,9,0.559,13,0.999,15,0.838,20,0.624,21,0.031,24,0.653,35,1.167,38,0.559,39,2.406,43,1.744,44,0.436,49,1.613,50,1.381,51,0.378,54,2.204,64,1.493,133,1.071,184,0.023,213,0.026,214,0.023,215,2.638,216,1.744,226,1.613,227,3.214,229,1.613,232,1.381,472,2.638,605,5.117,622,4.214,623,4.135,624,6.294,625,4.935,626,4.935,627,4.935]],["title/components/LoginComponent.html",[247,0.769,329,1.139]],["body/components/LoginComponent.html",[3,0.356,4,0.308,5,0.308,7,1.218,9,0.456,10,1.031,13,0.815,15,0.997,19,1.317,20,0.644,21,0.031,24,0.665,38,0.456,44,0.356,47,1.518,51,0.308,53,1.425,59,0.946,112,1.947,133,1.167,156,2.022,158,1.553,173,2.136,179,2.244,184,0.018,213,0.023,214,0.018,216,1.541,226,1.316,229,1.316,232,1.563,246,1.665,247,1.334,248,1.539,249,2.491,250,2.152,251,2.152,252,2.152,253,2.152,255,2.152,256,3.398,257,2.856,258,2.722,260,2.722,271,1.826,279,3.374,281,3.374,297,2.622,305,3.374,308,3.374,309,3.374,314,1.667,315,2.722,316,2.491,317,2.152,318,3.138,319,2.152,320,2.152,321,1.423,322,2.152,323,1.423,324,2.152,325,1.423,326,2.152,327,1.423,328,2.152,329,2.075,330,2.152,331,2.152,355,2.152,387,1.969,417,2.722,418,3.282,425,3.45,433,2.986,437,4.292,463,2.943,472,2.152,497,4.084,498,4.919,517,5.264,628,3.374,629,5.587,630,5.094,631,6.056,632,5.871,633,4.027,634,5.094,635,4.027,636,4.027,637,4.027,638,6.056,639,4.027,640,4.027,641,4.027,642,3.374,643,4.027,644,4.027,645,4.027,646,4.027,647,4.027,648,4.027,649,4.027,650,4.027,651,4.027,652,4.027,653,4.027,654,4.027]],["title/modules/MaterialModule.html",[332,1.448,346,1.723]],["body/modules/MaterialModule.html",[3,0.419,4,0.364,5,0.364,21,0.031,24,0.753,38,0.538,44,0.419,51,0.364,184,0.022,213,0.026,214,0.022,334,2.134,339,2.538,346,3.012,351,2.79,352,3.311,655,4.749,656,6.01,657,4.749,658,6.01,659,4.749,660,6.01,661,4.749,662,6.01,663,4.749,664,4.749,665,6.01,666,4.749,667,6.01,668,4.749,669,6.01,670,4.749,671,6.01,672,4.749,673,6.01,674,4.749,675,6.01,676,4.749]],["title/classes/SwaggerException.html",[51,0.247,181,1.139]],["body/classes/SwaggerException.html",[0,0.795,1,0.962,3,0.15,4,0.13,5,0.13,6,1.686,7,1.56,8,0.554,9,0.192,10,0.551,11,1.127,12,0.761,13,0.973,14,1.413,15,0.777,16,1.127,17,1.127,18,1.127,19,1.679,20,0.708,21,0.031,22,2.63,23,1.588,24,0.443,25,0.647,26,0.701,27,0.701,28,0.701,29,0.598,30,1.917,31,0.701,32,0.701,33,0.701,34,0.512,35,0.791,36,0.701,37,0.701,38,0.192,39,1.837,40,2.069,41,2.069,42,2.379,43,0.598,44,0.467,45,1.933,46,0.598,47,1.468,48,0.647,49,1.115,50,0.955,51,0.299,52,0.598,53,1.279,54,1.971,55,2.281,56,2.318,57,1.413,58,2.318,59,0.726,60,1.413,61,1.413,62,1.413,63,2.191,64,2.025,65,1.893,66,1.637,67,2.553,68,1.127,69,1.99,70,1.99,71,1.99,72,2.335,73,1.99,74,2.196,75,2.22,76,1.893,77,2.135,78,1.413,79,1.99,80,1.618,81,1.99,82,1.99,83,2.501,84,1.99,85,1.99,86,1.837,87,1.99,88,1.99,89,1.127,90,2.138,91,1.99,92,1.99,93,1.99,94,2.35,95,2.448,96,1.99,97,1.99,98,1.99,99,1.99,100,2.318,101,2.448,102,2.191,103,2.467,104,2.427,105,1.893,106,1.893,107,1.773,108,1.99,109,1.99,110,1.99,111,1.837,112,1.971,113,1.99,114,2.069,115,0.701,116,0.701,117,1.893,118,0.701,119,1.413,120,1.206,121,1.127,122,1.127,123,0.701,124,0.701,125,1.127,126,0.701,127,0.701,128,1.413,129,1.386,130,1.618,131,1.618,132,1.618,133,1.004,134,1.413,135,1.618,136,1.127,137,0.701,138,1.127,139,1.127,140,0.701,141,0.701,142,0.962,143,0.701,144,0.701,145,1.127,146,0.701,147,0.701,148,0.701,149,0.701,150,0.701,151,0.701,152,0.701,153,0.701,154,1.127,155,0.701,156,0.554,157,1.127,158,0.65,159,0.701,160,0.962,161,0.701,162,0.701,163,1.127,164,0.701,165,0.701,166,0.701,167,0.598,168,0.701,169,1.99,170,0.701,171,0.701,172,0.598,173,0.647,174,0.701,175,0.701,176,0.701,177,0.701,178,0.701,179,0.647,180,0.598,181,1.381,182,1.127,183,1.637,184,0.025,185,1.127,186,0.701,187,0.701,188,0.701,189,0.701,190,0.701,191,0.701,192,1.773,193,1.304,194,1.304,195,1.127,196,1.127,197,0.701,198,1.04,199,0.647,200,0.701,201,0.701,202,0.701,203,0.647,204,0.701,205,0.701,206,1.127,207,0.701,208,0.701,209,0.701,210,0.701,211,0.701,212,0.701,213,0.012,214,0.008,216,0.823,226,0.554,229,0.89,232,0.474,246,0.554,372,1.238,408,2.859,677,2.722,678,1.693,679,1.693,680,1.693,681,1.693,682,1.693,683,1.693]],["title/interfaces/UserDto.html",[0,0.599,172,1.139]],["body/interfaces/UserDto.html",[0,0.802,1,0.975,2,0.774,3,0.152,4,0.132,5,0.132,6,0.563,7,0.521,8,0.563,9,0.195,10,0.558,11,1.142,12,0.772,13,1.138,14,1.429,15,0.67,16,1.142,17,1.142,18,1.142,19,1.686,20,0.656,21,0.031,22,2.676,23,1.573,24,0.447,25,0.658,26,0.713,27,0.713,28,0.713,29,0.608,30,1.923,31,0.713,32,0.713,33,0.713,34,0.521,35,0.799,36,0.713,37,0.713,38,0.195,39,1.85,40,2.082,41,2.082,42,2.388,43,0.608,44,0.47,45,1.939,46,0.608,47,1.474,48,0.658,49,1.128,50,0.965,51,0.302,52,0.608,53,1.289,54,1.982,55,2.291,56,2.25,57,1.429,58,2.327,59,0.641,60,1.429,61,1.429,62,1.429,63,2.203,64,2.027,65,1.907,66,1.65,67,2.559,68,1.142,69,2.003,70,2.003,71,2.003,72,2.285,73,2.003,74,2.204,75,2.116,76,1.907,77,2.147,78,1.429,79,2.003,80,1.634,81,2.003,82,2.003,83,2.508,84,2.003,85,2.003,86,1.85,87,2.003,88,2.003,89,1.142,90,2.131,91,2.003,92,2.003,93,2.003,94,2.359,95,2.456,96,2.003,97,2.003,98,2.003,99,2.003,100,2.327,101,2.456,102,2.203,103,2.475,104,2.436,105,1.907,106,1.907,107,1.788,108,2.003,109,2.003,110,2.003,111,1.85,112,1.922,113,2.003,114,2.082,115,0.713,116,0.713,117,1.907,118,0.713,119,1.429,120,1.219,121,1.142,122,1.142,123,0.713,124,0.713,125,1.142,126,0.713,127,0.713,128,1.429,129,1.427,130,1.634,131,1.634,132,1.634,133,0.641,134,1.429,135,1.634,136,1.142,137,0.713,138,1.142,139,1.142,140,0.713,141,0.713,142,0.975,143,0.713,144,0.713,145,1.142,146,0.713,147,0.713,148,0.713,149,0.713,150,0.713,151,0.713,152,0.713,153,0.713,154,1.142,155,0.713,156,0.563,157,1.142,158,0.659,159,0.713,160,0.975,161,0.713,162,0.713,163,1.142,164,0.713,165,0.713,166,0.713,167,0.608,168,0.713,169,2.003,170,0.713,171,0.713,172,0.975,173,1.508,174,1.634,175,1.634,176,1.634,177,1.429,178,1.634,179,0.658,180,0.608,181,0.975,182,0.713,183,1.054,184,0.022,185,0.713,186,0.713,187,0.713,188,0.713,189,0.713,190,0.713,191,0.713,192,0.713,193,1.054,194,0.658,195,0.713,196,0.713,197,0.713,198,1.054,199,0.658,200,0.713,201,0.713,202,0.713,203,0.658,204,0.713,205,0.713,206,1.142,207,0.713,208,0.713,209,0.713,210,0.713,211,0.713,212,0.713,213,0.013,214,0.008]],["title/coverage.html",[684,3.686]],["body/coverage.html",[0,1.178,1,1.484,5,0.322,6,2.149,7,1.988,8,2.149,12,1.175,20,0.531,21,0.031,35,1.241,46,1.484,47,1.086,51,0.4,52,1.484,142,1.484,156,1.373,160,1.484,167,1.484,172,1.484,180,1.484,181,1.484,184,0.019,198,1.999,213,0.024,214,0.019,247,1.493,248,1.605,254,3.519,271,1.373,296,3.982,321,1.484,323,1.484,325,1.484,327,1.484,329,1.484,371,3.07,373,3.519,400,1.484,401,3.823,414,3.186,415,2.735,416,3.519,429,2.245,491,2.735,492,3.519,493,2.735,511,3.07,512,2.735,514,3.519,531,2.735,532,3.519,572,3.519,601,3.519,622,3.07,623,3.519,628,3.519,684,3.519,685,4.2,686,4.2,687,4.2,688,6.132,689,4.2,690,6.252,691,5.23,692,5.696,693,3.519,694,3.519,695,6.252,696,6.409,697,5.23,698,4.2,699,4.2,700,3.519,701,3.519,702,3.519,703,4.382,704,3.519,705,4.382,706,3.519,707,3.519,708,4.2,709,4.2]],["title/dependencies.html",[335,2.278,710,2.691]],["body/dependencies.html",[21,0.031,34,1.503,38,0.563,184,0.023,213,0.026,214,0.023,335,2.919,337,3.236,355,2.656,357,4.849,358,3.769,367,4.163,368,4.163,387,2.43,560,4.163,711,4.969,712,6.604,713,4.969,714,5.788,715,4.969,716,4.969,717,4.969,718,4.969,719,4.969,720,4.969,721,4.969,722,4.969,723,4.969,724,4.969,725,4.969,726,4.969,727,4.969]],["title/miscellaneous/functions.html",[728,1.753,729,3.248]],["body/miscellaneous/functions.html",[6,1.645,7,1.522,8,2.012,9,0.57,13,1.18,15,0.99,20,0.737,21,0.03,30,1.906,72,2.228,74,1.923,75,2.228,90,1.906,183,1.923,184,0.028,199,1.923,203,1.923,213,0.027,214,0.023,229,1.906,230,3.277,232,1.631,700,4.885,701,4.885,728,3.277,729,4.216,730,4.885]],["title/index.html",[9,0.305,621,2.255,731,2.691]],["body/index.html",[4,0.365,15,0.809,21,0.026,47,1.232,111,2.158,184,0.022,213,0.026,214,0.022,247,1.437,257,2.141,349,3.103,378,3.992,507,5.042,642,3.992,732,4.764,733,5.647,734,6.018,735,6.018,736,4.764,737,4.764,738,4.764,739,6.352,740,4.764,741,4.764,742,4.764,743,4.764,744,4.764,745,4.764,746,4.764,747,4.764,748,4.764,749,4.764,750,4.764,751,6.442,752,6.018,753,4.764,754,6.352,755,4.764,756,4.764,757,4.764,758,4.764,759,4.764,760,4.764,761,3.992,762,5.647,763,5.647,764,6.223,765,4.764,766,5.647,767,5.647,768,4.764,769,6.223,770,4.764,771,4.764,772,6.018,773,4.764,774,4.764,775,4.764,776,4.764]],["title/modules.html",[334,1.977]],["body/modules.html",[21,0.027,184,0.024,213,0.027,214,0.024,333,3.353,334,2.314,344,3.025,345,3.025,346,2.752,358,3.848,557,3.025,777,5.908,778,5.908,779,6.482,780,6.214,781,6.214]],["title/overview.html",[782,3.686]],["body/overview.html",[2,2.111,21,0.031,184,0.021,213,0.026,214,0.021,215,2.511,248,2.48,249,2.298,314,1.945,321,2.114,323,2.114,325,2.114,327,2.114,329,2.114,332,2.111,333,4.374,334,2.111,335,2.76,336,3.434,337,3.059,338,3.059,339,2.511,340,3.936,341,3.936,342,3.936,343,3.936,344,3.515,345,3.928,346,3.311,347,4.093,348,3.434,349,3.059,372,3.434,385,2.511,511,3.434,554,3.936,555,3.936,556,3.936,557,3.515,782,3.936,783,5.6,784,5.6,785,3.936,786,3.936,787,4.698]],["title/routes.html",[385,2.352]],["body/routes.html",[21,0.027,184,0.024,213,0.027,214,0.024,385,2.825]],["title/miscellaneous/variables.html",[728,1.753,788,3.248]],["body/miscellaneous/variables.html",[6,1.433,7,1.326,8,1.755,9,0.496,20,0.765,21,0.031,46,1.898,47,1.134,48,1.676,59,1.153,129,1.445,184,0.02,193,2.053,213,0.025,214,0.02,246,2.029,271,1.755,296,2.576,400,1.549,402,3.234,404,3.941,405,3.234,406,3.941,407,3.234,409,3.941,410,3.555,411,3.555,412,3.555,459,5.07,693,3.673,694,4.5,702,3.673,703,5.07,704,3.673,705,3.673,706,4.5,707,4.5,728,2.855,730,3.673,761,4.5,785,4.5,786,4.5,788,3.673,789,4.384,790,5.371,791,4.384,792,4.384,793,4.384,794,4.384,795,6.051,796,6.051,797,6.051,798,4.384,799,6.051,800,4.384,801,4.384,802,4.384,803,4.384,804,4.384,805,4.384,806,4.384,807,5.371,808,4.384,809,4.384,810,4.384,811,4.384,812,4.384,813,4.384,814,4.384,815,4.384,816,4.384,817,5.371,818,4.384]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0011223344",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0011223355",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0011223366",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0011223377",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0157",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":786,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{}}}],["12345",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":490,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["2",{"_index":785,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":100,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["201",{"_index":124,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["204",{"_index":108,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["250px",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.4.1",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["4",{"_index":584,"title":{},"body":{"injectables/ContactsService.html":{}}}],["4.4.1",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{}}}],["400",{"_index":165,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["404",{"_index":138,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["409",{"_index":147,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["40px",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":783,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":784,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":787,"title":{},"body":{"overview.html":{}}}],["8.3.21",{"_index":737,"title":{},"body":{"index.html":{}}}],["9",{"_index":457,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["9.0.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["9.0.7",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["9.1.3",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["9]{5",{"_index":439,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["_headers",{"_index":95,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_headers[key",{"_index":98,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablecatch",{"_index":28,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablemergemap",{"_index":26,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observableof",{"_index":33,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observableof(null",{"_index":114,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observableof(result200",{"_index":107,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observableof(result201",{"_index":126,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablethrow",{"_index":32,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablethrow(e",{"_index":87,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablethrow(new",{"_index":201,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablethrow(response_",{"_index":88,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_observablethrow(result",{"_index":200,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["_responsetext",{"_index":104,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["a:active",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["a:hover",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["accept",{"_index":76,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["accesstoken",{"_index":178,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["action",{"_index":544,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["activatedroute",{"_index":498,"title":{},"body":{"components/ContactsDetailComponent.html":{},"components/LoginComponent.html":{}}}],["activatedroutesnapshot",{"_index":521,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["actual_component",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["add",{"_index":419,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{}}}],["add'},{'name",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["add.component",{"_index":563,"title":{},"body":{"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{}}}],["add.component.html",{"_index":421,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.scss",{"_index":420,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts",{"_index":416,"title":{},"body":{"components/ContactsAddComponent.html":{},"coverage.html":{}}}],["add.component.ts:15",{"_index":435,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:18",{"_index":462,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:24",{"_index":458,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:37",{"_index":430,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:41",{"_index":434,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add.component.ts:44",{"_index":432,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["add/contacts",{"_index":415,"title":{},"body":{"components/ContactsAddComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"coverage.html":{}}}],["addcontact",{"_index":424,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{}}}],["addcontact(contact",{"_index":577,"title":{},"body":{"injectables/ContactsService.html":{}}}],["address",{"_index":243,"title":{},"body":{"injectables/AddressesService.html":{}}}],["addresscreatedto",{"_index":1,"title":{"interfaces/AddressCreateDto.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["addressdto",{"_index":142,"title":{"interfaces/AddressDto.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["addressesservice",{"_index":52,"title":{"injectables/AddressesService.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["addresstocreate",{"_index":236,"title":{},"body":{"injectables/AddressesService.html":{}}}],["adresse",{"_index":402,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["aktion",{"_index":551,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["align",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["andreas",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["andreasmeier@getmaxlisteners.com",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["androthe",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigten",{"_index":470,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["angular",{"_index":734,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":560,"title":{},"body":{"modules/ContactsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":43,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["angular/compiler",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"modules/ContactsModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":657,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":659,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":661,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":663,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":666,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":668,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":670,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":565,"title":{},"body":{"modules/ContactsModule.html":{}}}],["angular/material/sidenav",{"_index":672,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":674,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":676,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["anzahl",{"_index":447,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["api/addresses",{"_index":68,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["api/addresses/{id",{"_index":128,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["api/auth",{"_index":161,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["api/educationalopportunity",{"_index":171,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["api_base_url",{"_index":46,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["app.component",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":248,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":77,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["appmodule",{"_index":333,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":371,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":344,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":755,"title":{},"body":{"index.html":{}}}],["auf",{"_index":441,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["authservice",{"_index":156,"title":{"injectables/AuthService.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["auto",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["automatically",{"_index":745,"title":{},"body":{"index.html":{}}}],["available",{"_index":781,"title":{},"body":{"modules.html":{}}}],["baseurl",{"_index":55,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["before",{"_index":569,"title":{},"body":{"modules/ContactsRoutingModule.html":{}}}],["beginnen",{"_index":455,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["behaviorsubject",{"_index":582,"title":{},"body":{"injectables/ContactsService.html":{}}}],["behaviorsubject(contacts",{"_index":583,"title":{},"body":{"injectables/ContactsService.html":{}}}],["beliebige",{"_index":446,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["beta.29",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["bindestrichen",{"_index":451,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["blob",{"_index":74,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["blobtotext",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(blob",{"_index":203,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["blobtotext(responseblob).pipe(_observablemergemap(_responsetext",{"_index":101,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["block",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["body",{"_index":119,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["boolean",{"_index":177,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["bootstrap",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["browse",{"_index":779,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":379,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":754,"title":{},"body":{"index.html":{}}}],["catch",{"_index":85,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["catcherror",{"_index":27,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["center",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["centered",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{}}}],["change",{"_index":747,"title":{},"body":{"index.html":{}}}],["check",{"_index":775,"title":{},"body":{"index.html":{}}}],["city",{"_index":11,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["class",{"_index":51,"title":{"classes/AppPage.html":{},"classes/SwaggerException.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["classes",{"_index":372,"title":{},"body":{"classes/AppPage.html":{},"classes/SwaggerException.html":{},"overview.html":{}}}],["cli",{"_index":735,"title":{},"body":{"index.html":{}}}],["click",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["clickcounter",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["cluster_appmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_contactsmodule",{"_index":554,"title":{},"body":{"modules/ContactsModule.html":{},"overview.html":{}}}],["cluster_contactsmodule_declarations",{"_index":555,"title":{},"body":{"modules/ContactsModule.html":{},"overview.html":{}}}],["cluster_contactsmodule_imports",{"_index":556,"title":{},"body":{"modules/ContactsModule.html":{},"overview.html":{}}}],["code",{"_index":749,"title":{},"body":{"index.html":{}}}],["color",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["commonmodule",{"_index":559,"title":{},"body":{"modules/ContactsModule.html":{}}}],["component",{"_index":247,"title":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["components",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["console.log('addcontact",{"_index":547,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["console.warn(this.contactsform.value",{"_index":509,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["const",{"_index":45,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"modules/ContactsRoutingModule.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["constructor",{"_index":226,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{}}}],["constructor(@inject(httpclient",{"_index":60,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["constructor(authservice",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(cs",{"_index":516,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["constructor(fb",{"_index":426,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["constructor(http",{"_index":227,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{}}}],["constructor(message",{"_index":185,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["constructor(private",{"_index":472,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{}}}],["constructor(service",{"_index":537,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["contact",{"_index":400,"title":{"interfaces/Contact.html":{}},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contact.id",{"_index":592,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contactdetails",{"_index":489,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["contacts",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contacts.find(contact",{"_index":591,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contacts.model",{"_index":464,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{}}}],["contacts.push(contact",{"_index":594,"title":{},"body":{"injectables/ContactsService.html":{}}}],["contacts.service",{"_index":465,"title":{},"body":{"components/ContactsAddComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{}}}],["contacts.ts",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contacts/contacts.module",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["contactsaddcomponent",{"_index":321,"title":{"components/ContactsAddComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsdetailcomponent",{"_index":323,"title":{"components/ContactsDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsdetailresolverservice",{"_index":512,"title":{"guards/ContactsDetailResolverService.html":{}},"body":{"guards/ContactsDetailResolverService.html":{},"modules/ContactsRoutingModule.html":{},"coverage.html":{}}}],["contactsform",{"_index":422,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["contactsform.status",{"_index":488,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["contactsform.value",{"_index":486,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["contactslistcomponent",{"_index":325,"title":{"components/ContactsListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contactsmodule",{"_index":345,"title":{"modules/ContactsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"modules.html":{},"overview.html":{}}}],["contactsroutes",{"_index":567,"title":{},"body":{"modules/ContactsRoutingModule.html":{}}}],["contactsroutingmodule",{"_index":557,"title":{"modules/ContactsRoutingModule.html":{}},"body":{"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["contactsservice",{"_index":429,"title":{"injectables/ContactsService.html":{}},"body":{"components/ContactsAddComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"coverage.html":{}}}],["contactsservice.nextid",{"_index":593,"title":{},"body":{"injectables/ContactsService.html":{}}}],["container",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":120,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["content_",{"_index":117,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["context",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["countclick",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["countries",{"_index":423,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["country",{"_index":12,"title":{"interfaces/Country.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["country.viewvalue",{"_index":482,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["coverage",{"_index":684,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":115,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["credentials",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentialsdto",{"_index":160,"title":{"interfaces/CredentialsDto.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["crms",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["crmsfrontend",{"_index":732,"title":{},"body":{"index.html":{}}}],["crohm",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["cs",{"_index":519,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["cursor",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["customer",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"overview.html":{}}}],["decoration",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["default",{"_index":246,"title":{},"body":{"injectables/AddressesService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":133,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["delete",{"_index":217,"title":{},"body":{"injectables/AddressesService.html":{},"components/ContactsListComponent.html":{}}}],["delete(id",{"_index":152,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["deletecontact",{"_index":536,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["deletecontact(id",{"_index":540,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["deleted",{"_index":151,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["dependencies",{"_index":335,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":467,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["description",{"_index":14,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["detail",{"_index":493,"title":{},"body":{"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"modules/ContactsRoutingModule.html":{},"coverage.html":{}}}],["detail'},{'name",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["detail.component",{"_index":562,"title":{},"body":{"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{}}}],["detail.component.html",{"_index":495,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail.component.scss",{"_index":494,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail.component.ts",{"_index":492,"title":{},"body":{"components/ContactsDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:12",{"_index":502,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail.component.ts:14",{"_index":503,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail.component.ts:22",{"_index":499,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":500,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":501,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["detail/contacts",{"_index":491,"title":{},"body":{"components/ContactsDetailComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"coverage.html":{}}}],["deutschland",{"_index":459,"title":{},"body":{"components/ContactsAddComponent.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":742,"title":{},"body":{"index.html":{}}}],["development",{"_index":738,"title":{},"body":{"index.html":{}}}],["directive",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["directives",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":753,"title":{},"body":{"index.html":{}}}],["directory",{"_index":758,"title":{},"body":{"index.html":{}}}],["display",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["displayedcolumns",{"_index":535,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["dist",{"_index":757,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["dropdown",{"_index":469,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["dynamic",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":86,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["e2e",{"_index":770,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":373,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":377,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":376,"title":{},"body":{"classes/AppPage.html":{}}}],["ects",{"_index":169,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["edit",{"_index":552,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["educationalopportunitydto",{"_index":180,"title":{"interfaces/EducationalOpportunityDto.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["educationalopportunityservice",{"_index":167,"title":{"injectables/EducationalOpportunityService.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["element",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["element(by.css('app",{"_index":381,"title":{},"body":{"classes/AppPage.html":{}}}],["element.adresse",{"_index":550,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["element.nachname",{"_index":549,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["element.vorname",{"_index":548,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["email",{"_index":174,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["empty",{"_index":525,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["encodeuricomponent",{"_index":135,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["end",{"_index":769,"title":{},"body":{"index.html":{}}}],["environment",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":112,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["error(\"the",{"_index":131,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["errortext",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["event",{"_index":210,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["eventemitter",{"_index":508,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["events",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":766,"title":{},"body":{"index.html":{}}}],["export",{"_index":44,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["exports",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"modules/MaterialModule.html":{},"overview.html":{}}}],["extends",{"_index":182,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["false",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":431,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["field",{"_index":664,"title":{},"body":{"modules/MaterialModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["filereader",{"_index":208,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["files",{"_index":748,"title":{},"body":{"index.html":{}}}],["firma",{"_index":403,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Country.html":{}}}],["flag",{"_index":760,"title":{},"body":{"index.html":{}}}],["flexlayoutmodule",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["form",{"_index":476,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["format",{"_index":443,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["formbuilder",{"_index":427,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["formcontrol",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{}}}],["found",{"_index":66,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["frontend",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["function",{"_index":198,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["functions",{"_index":729,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":771,"title":{},"body":{"index.html":{}}}],["generate",{"_index":752,"title":{},"body":{"index.html":{}}}],["generated",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["generated.ts",{"_index":8,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["generated.ts:113",{"_index":240,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:137",{"_index":234,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:166",{"_index":239,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:194",{"_index":242,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:21",{"_index":245,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:22",{"_index":244,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:227",{"_index":241,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:23",{"_index":228,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:255",{"_index":231,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:283",{"_index":237,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:311",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated.ts:312",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated.ts:313",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated.ts:323",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated.ts:33",{"_index":233,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:353",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated.ts:383",{"_index":600,"title":{},"body":{"injectables/EducationalOpportunityService.html":{}}}],["generated.ts:384",{"_index":599,"title":{},"body":{"injectables/EducationalOpportunityService.html":{}}}],["generated.ts:385",{"_index":596,"title":{},"body":{"injectables/EducationalOpportunityService.html":{}}}],["generated.ts:396",{"_index":597,"title":{},"body":{"injectables/EducationalOpportunityService.html":{}}}],["generated.ts:426",{"_index":598,"title":{},"body":{"injectables/EducationalOpportunityService.html":{}}}],["generated.ts:491",{"_index":680,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:492",{"_index":682,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:493",{"_index":681,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:494",{"_index":678,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:495",{"_index":677,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:507",{"_index":679,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:509",{"_index":683,"title":{},"body":{"classes/SwaggerException.html":{}}}],["generated.ts:59",{"_index":238,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated.ts:83",{"_index":235,"title":{},"body":{"injectables/AddressesService.html":{}}}],["generated/api",{"_index":7,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["get(ects",{"_index":170,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["getbeer",{"_index":624,"title":{},"body":{"injectables/HttpService.html":{}}}],["getbyid",{"_index":218,"title":{},"body":{"injectables/AddressesService.html":{}}}],["getbyid(id",{"_index":127,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["getcontact",{"_index":574,"title":{},"body":{"injectables/ContactsService.html":{}}}],["getcontact(id",{"_index":579,"title":{},"body":{"injectables/ContactsService.html":{}}}],["getcontacts",{"_index":575,"title":{},"body":{"injectables/ContactsService.html":{}}}],["getting",{"_index":731,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":374,"title":{},"body":{"classes/AppPage.html":{}}}],["go",{"_index":774,"title":{},"body":{"index.html":{}}}],["graph",{"_index":780,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":511,"title":{"guards/ContactsDetailResolverService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":513,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["headers",{"_index":75,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["height",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":772,"title":{},"body":{"index.html":{}}}],["hinzufügen",{"_index":553,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["home",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["home.component.html",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":327,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["http",{"_index":54,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["http://localhost:4200",{"_index":744,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":39,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["httpclientmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":40,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["httpresponse",{"_index":41,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["httpresponsebase",{"_index":42,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["httpservice",{"_index":622,"title":{"injectables/HttpService.html":{}},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["icon",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":129,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["im",{"_index":468,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["implements",{"_index":417,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":24,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["import('./contacts/contacts.module').then(mod",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["inject",{"_index":36,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["inject(api_base_url",{"_index":61,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["injectable",{"_index":35,"title":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["injectables",{"_index":215,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":37,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["injectiontoken('api_base_url",{"_index":48,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":475,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["instanceof",{"_index":83,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"interfaces/Contact.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"interfaces/Contact.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"interfaces/UserDto.html":{},"overview.html":{}}}],["isswaggerexception",{"_index":192,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["isswaggerexception(obj",{"_index":195,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["items",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["jquery",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":487,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{}}}],["json.parse(_responsetext",{"_index":105,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["json.stringify(address",{"_index":143,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["json.stringify(addresstocreate",{"_index":118,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["json.stringify(credentials",{"_index":162,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["jsonparsereviver",{"_index":57,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["judith",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["judithandrothe@getmaxlisteners.com",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["julia",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["juliastoh@getmaxlisteners.com",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":768,"title":{},"body":{"index.html":{}}}],["key",{"_index":58,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["kontakt",{"_index":481,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsListComponent.html":{}}}],["kontaktdaten",{"_index":510,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["kontakte",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["kontaktmöglichkeit",{"_index":483,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["korrektes",{"_index":442,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["label",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["laender",{"_index":471,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["laesst",{"_index":445,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["land",{"_index":409,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["leerzeichen",{"_index":449,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["left",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["lightgray",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsListComponent.html":{}}}],["list'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["list.component",{"_index":561,"title":{},"body":{"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{}}}],["list.component.html",{"_index":534,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list.component.scss",{"_index":533,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list.component.ts",{"_index":532,"title":{},"body":{"components/ContactsListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":543,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list.component.ts:14",{"_index":538,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list.component.ts:18",{"_index":542,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list.component.ts:22",{"_index":539,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list.component.ts:26",{"_index":541,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["list/contacts",{"_index":531,"title":{},"body":{"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"coverage.html":{}}}],["liste",{"_index":466,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["literal",{"_index":408,"title":{},"body":{"interfaces/Contact.html":{},"classes/SwaggerException.html":{}}}],["loadchildren",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login",{"_index":158,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["login(credentials",{"_index":159,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["login.component.html",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":329,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mail",{"_index":404,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["managing",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":586,"title":{},"body":{"injectables/ContactsService.html":{}}}],["map(contacts",{"_index":590,"title":{},"body":{"injectables/ContactsService.html":{}}}],["margin",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/LoginComponent.html":{}}}],["mat",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["matautocompletemodule",{"_index":656,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":658,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":660,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":213,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["materialmodule",{"_index":346,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matformfieldmodule",{"_index":662,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":665,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":667,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":669,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":564,"title":{},"body":{"modules/ContactsModule.html":{}}}],["matsidenavmodule",{"_index":671,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":673,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":675,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxmustermann@getmaxlisteners.com",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meier",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":25,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["mergemap(contact",{"_index":529,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["message",{"_index":183,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["methods",{"_index":216,"title":{},"body":{"injectables/AddressesService.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{}}}],["middle",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":728,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":454,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["mock",{"_index":587,"title":{},"body":{"injectables/ContactsService.html":{}}}],["mod.contactsmodule",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module",{"_index":332,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"overview.html":{}}}],["modules",{"_index":334,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":773,"title":{},"body":{"index.html":{}}}],["muss",{"_index":453,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["mustermann",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nachname",{"_index":405,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":15,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":743,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":375,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["needs",{"_index":568,"title":{},"body":{"modules/ContactsRoutingModule.html":{}}}],["neuer",{"_index":480,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["new",{"_index":47,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nextid",{"_index":573,"title":{},"body":{"injectables/ContactsService.html":{}}}],["ng",{"_index":751,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["ngoninit",{"_index":425,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["none",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["npm",{"_index":740,"title":{},"body":{"index.html":{}}}],["null",{"_index":103,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["number",{"_index":23,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["nürnberg",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj",{"_index":196,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["obj.isswaggerexception",{"_index":197,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["object",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":30,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["observable((observer",{"_index":204,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["observe",{"_index":71,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["observer.complete",{"_index":206,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["observer.next",{"_index":205,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["observer.next((event.target).result",{"_index":211,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["occurred",{"_index":113,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["of(contact",{"_index":530,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["oninit",{"_index":418,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["onsubmit",{"_index":496,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["options_",{"_index":70,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["options_).pipe(_observablemergemap((response_",{"_index":79,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["ort",{"_index":412,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":782,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":710,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["param",{"_index":168,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["parameter",{"_index":132,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["parameters",{"_index":229,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":179,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["path",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContactsRoutingModule.html":{}}}],["phone",{"_index":406,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["phonenumber",{"_index":175,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["pipe(_observablecatch((response_",{"_index":81,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["platform",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["plz",{"_index":411,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["pointer",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["post",{"_index":219,"title":{},"body":{"injectables/AddressesService.html":{}}}],["post(addresstocreate",{"_index":116,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["private",{"_index":53,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["process",{"_index":150,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["processdelete",{"_index":220,"title":{},"body":{"injectables/AddressesService.html":{}}}],["processdelete(response",{"_index":155,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["processget",{"_index":221,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/EducationalOpportunityService.html":{}}}],["processget(response",{"_index":89,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["processgetbyid",{"_index":222,"title":{},"body":{"injectables/AddressesService.html":{}}}],["processgetbyid(response",{"_index":137,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["processlogin",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["processlogin(response",{"_index":164,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["processpost",{"_index":223,"title":{},"body":{"injectables/AddressesService.html":{}}}],["processpost(response",{"_index":123,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["processput",{"_index":224,"title":{},"body":{"injectables/AddressesService.html":{}}}],["processput(response",{"_index":146,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["prod",{"_index":759,"title":{},"body":{"index.html":{}}}],["production",{"_index":761,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":733,"title":{},"body":{"index.html":{}}}],["promise",{"_index":380,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["protected",{"_index":56,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["protractor",{"_index":378,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":49,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["providers",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"overview.html":{}}}],["public",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{},"injectables/HttpService.html":{}}}],["put",{"_index":225,"title":{},"body":{"injectables/AddressesService.html":{}}}],["put(address",{"_index":141,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["reactiveformsmodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{}}}],["reader",{"_index":207,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["reader.onload",{"_index":209,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["reader.readastext(blob",{"_index":212,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["readme",{"_index":776,"title":{},"body":{"index.html":{}}}],["recognized",{"_index":570,"title":{},"body":{"modules/ContactsRoutingModule.html":{}}}],["redirect",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["relationship",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["relationships",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["relativeto",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{}}}],["reload",{"_index":746,"title":{},"body":{"index.html":{}}}],["require",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"overview.html":{}}}],["resolve",{"_index":515,"title":{},"body":{"guards/ContactsDetailResolverService.html":{},"modules/ContactsRoutingModule.html":{}}}],["resolve(route",{"_index":520,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["resolver.service",{"_index":566,"title":{},"body":{"modules/ContactsRoutingModule.html":{}}}],["resolver.service.ts",{"_index":514,"title":{},"body":{"guards/ContactsDetailResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:17",{"_index":518,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["resolver.service.ts:20",{"_index":524,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["response",{"_index":72,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["response).error",{"_index":94,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["response.body",{"_index":93,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["response.headers",{"_index":96,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["response.headers.get(key",{"_index":99,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["response.headers.keys",{"_index":97,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["response.status",{"_index":91,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["response_",{"_index":82,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["responseblob",{"_index":92,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["responsetype",{"_index":73,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["result",{"_index":184,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result200",{"_index":102,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["result201",{"_index":125,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["results",{"_index":214,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":64,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["returns",{"_index":232,"title":{},"body":{"injectables/AddressesService.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":50,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"injectables/HttpService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["root'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["route",{"_index":497,"title":{},"body":{"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/LoginComponent.html":{}}}],["route.parammap.get('id",{"_index":526,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["router",{"_index":517,"title":{},"body":{"guards/ContactsDetailResolverService.html":{},"components/LoginComponent.html":{}}}],["routermodule",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContactsRoutingModule.html":{}}}],["routermodule.forchild(contactsroutes",{"_index":571,"title":{},"body":{"modules/ContactsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":523,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["routes",{"_index":385,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{}}}],["routing.module.ts",{"_index":384,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ContactsRoutingModule.html":{}}}],["run",{"_index":739,"title":{},"body":{"index.html":{}}}],["running",{"_index":762,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":34,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":29,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"guards/ContactsDetailResolverService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["scaffolding",{"_index":750,"title":{},"body":{"index.html":{}}}],["schweiz",{"_index":460,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["selector",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["server",{"_index":111,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"index.html":{}}}],["service",{"_index":428,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsListComponent.html":{}}}],["shared/api",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["shared/material.module",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{}}}],["sidenav",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsModule.html":{},"modules/ContactsRoutingModule.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"index.html":{}}}],["span')).gettext",{"_index":382,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speichern",{"_index":484,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["src/.../api",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":383,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/contacts/contacts",{"_index":414,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"modules/ContactsRoutingModule.html":{},"coverage.html":{}}}],["src/app/contacts/contacts.model.ts",{"_index":401,"title":{},"body":{"interfaces/Contact.html":{},"interfaces/Country.html":{},"coverage.html":{}}}],["src/app/contacts/contacts.module.ts",{"_index":558,"title":{},"body":{"modules/ContactsModule.html":{}}}],["src/app/contacts/contacts.service.ts",{"_index":572,"title":{},"body":{"injectables/ContactsService.html":{},"coverage.html":{}}}],["src/app/contacts/contacts.service.ts:12",{"_index":585,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/contacts/contacts.service.ts:13",{"_index":576,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/contacts/contacts.service.ts:17",{"_index":581,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/contacts/contacts.service.ts:21",{"_index":580,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/contacts/contacts.service.ts:27",{"_index":578,"title":{},"body":{"injectables/ContactsService.html":{}}}],["src/app/contacts/mock",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/home.component.ts",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:11",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:16",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:12",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:18",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/shared/api",{"_index":6,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/http.service.ts",{"_index":623,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/shared/http.service.ts:11",{"_index":626,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/http.service.ts:7",{"_index":625,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/material.module.ts",{"_index":655,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":741,"title":{},"body":{"index.html":{}}}],["started",{"_index":621,"title":{"index.html":{}},"body":{"components/HomeComponent.html":{}}}],["state",{"_index":522,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["statements",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":194,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/ContactsService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["statistics",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["statistiken",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["status",{"_index":90,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["sterreich",{"_index":461,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["stoh",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":756,"title":{},"body":{"index.html":{}}}],["strasse",{"_index":410,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["street",{"_index":16,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["streetnumber",{"_index":17,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["style",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["styleurls",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["subscribe(result",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["successful",{"_index":157,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["successfully",{"_index":65,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["super",{"_index":186,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["support",{"_index":777,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":778,"title":{},"body":{"modules.html":{}}}],["swaggerexception",{"_index":181,"title":{"classes/SwaggerException.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["swaggerexception(message",{"_index":202,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["system",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":473,"title":{},"body":{"components/ContactsAddComponent.html":{},"guards/ContactsDetailResolverService.html":{}}}],["take(1",{"_index":528,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["template",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["templateurl",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["test",{"_index":765,"title":{},"body":{"index.html":{}}}],["tests",{"_index":764,"title":{},"body":{"index.html":{}}}],["teststrasse",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.baseurl",{"_index":63,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.clickcounter",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.contact",{"_index":477,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["this.contacts",{"_index":545,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["this.contacts$.asobservable",{"_index":588,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.contacts$.next(contacts",{"_index":595,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.contactsform.patchvalue(this.contact",{"_index":505,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["this.contactsform.value",{"_index":478,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.cs.getcontact(id).pipe",{"_index":527,"title":{},"body":{"guards/ContactsDetailResolverService.html":{}}}],["this.errortext",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fb.group",{"_index":436,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["this.getcontacts().pipe",{"_index":589,"title":{},"body":{"injectables/ContactsService.html":{}}}],["this.headers",{"_index":190,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.http",{"_index":62,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.http.get('https://api.openbrewerydb.org/breweries",{"_index":627,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.request(\"delete",{"_index":153,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.http.request(\"get",{"_index":78,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.http.request(\"post",{"_index":121,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.http.request(\"put",{"_index":144,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.jsonparsereviver",{"_index":106,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.message",{"_index":187,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.password.value",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.processdelete(response_",{"_index":154,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.processget(response_",{"_index":80,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.processgetbyid(response_",{"_index":136,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.processlogin(response_",{"_index":163,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.processpost(response_",{"_index":122,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.processput(response_",{"_index":145,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.redirect",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.response",{"_index":189,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.result",{"_index":191,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.route",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.data.contact",{"_index":504,"title":{},"body":{"components/ContactsDetailComponent.html":{}}}],["this.router.navigate(['/contacts",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.addcontact(this.contact",{"_index":479,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["this.service.getcontacts",{"_index":546,"title":{},"body":{"components/ContactsListComponent.html":{}}}],["this.status",{"_index":188,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["this.username.value",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{}}}],["throw",{"_index":130,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["throwerror",{"_index":31,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["throwexception",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwexception(\"address",{"_index":139,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["throwexception(\"an",{"_index":109,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["throwexception(\"conflict",{"_index":148,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["throwexception(\"not",{"_index":166,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["throwexception(message",{"_index":199,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["title",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":506,"title":{},"body":{"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{}}}],["tree",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":193,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":84,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["tslib",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["twofactorenabled",{"_index":176,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"guards/ContactsDetailResolverService.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["und",{"_index":450,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["undefined",{"_index":22,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["unexpected",{"_index":110,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["unit",{"_index":763,"title":{},"body":{"index.html":{}}}],["update",{"_index":149,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["updated",{"_index":140,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["url_",{"_index":67,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["url_.replace",{"_index":69,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["url_.replace(\"{id",{"_index":134,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["use",{"_index":507,"title":{},"body":{"components/ContactsDetailComponent.html":{},"index.html":{}}}],["userdto",{"_index":172,"title":{"interfaces/UserDto.html":{}},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["username",{"_index":173,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["validators",{"_index":463,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/LoginComponent.html":{}}}],["validators.email",{"_index":444,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["validators.pattern('^0[0",{"_index":456,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["validators.pattern('^[0",{"_index":438,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{}}}],["validators.required",{"_index":437,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/LoginComponent.html":{}}}],["validiert",{"_index":440,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["value",{"_index":59,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"interfaces/Country.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":474,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["var",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["variable",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":788,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veranstaltungen",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["version",{"_index":736,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["verwerfen",{"_index":485,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["via",{"_index":767,"title":{},"body":{"index.html":{}}}],["viewvalue",{"_index":413,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"interfaces/Country.html":{}}}],["void",{"_index":433,"title":{},"body":{"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"injectables/ContactsService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["vorname",{"_index":407,"title":{},"body":{"interfaces/Contact.html":{},"components/ContactsAddComponent.html":{},"components/ContactsDetailComponent.html":{},"components/ContactsListComponent.html":{},"interfaces/Country.html":{},"miscellaneous/variables.html":{}}}],["white",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["yes",{"_index":230,"title":{},"body":{"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"injectables/EducationalOpportunityService.html":{},"miscellaneous/functions.html":{}}}],["ziffern",{"_index":448,"title":{},"body":{"components/ContactsAddComponent.html":{}}}],["zipcode",{"_index":18,"title":{},"body":{"interfaces/AddressCreateDto.html":{},"interfaces/AddressDto.html":{},"injectables/AddressesService.html":{},"injectables/AuthService.html":{},"interfaces/CredentialsDto.html":{},"interfaces/EducationalOpportunityDto.html":{},"injectables/EducationalOpportunityService.html":{},"classes/SwaggerException.html":{},"interfaces/UserDto.html":{}}}],["zone.js",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/ContactsModule.html":{},"overview.html":{}}}],["zu",{"_index":452,"title":{},"body":{"components/ContactsAddComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddressCreateDto.html":{"url":"interfaces/AddressCreateDto.html","title":"interface - AddressCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddressCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                        street\n                                \n                                \n                                        streetNumber\n                                \n                                \n                                        zipcode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipcode\n                                    \n                                \n                                \n                                    \n                                        zipcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddressDto.html":{"url":"interfaces/AddressDto.html","title":"interface - AddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        street\n                                \n                                \n                                        streetNumber\n                                \n                                \n                                            Optional\n                                        zipcode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipcode\n                                    \n                                \n                                \n                                    \n                                        zipcode:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressesService.html":{"url":"injectables/AddressesService.html","title":"injectable - AddressesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddressesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Protected\n                                jsonParseReviver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                getById\n                            \n                            \n                                post\n                            \n                            \n                                    Protected\n                                processDelete\n                            \n                            \n                                    Protected\n                                processGet\n                            \n                            \n                                    Protected\n                                processGetById\n                            \n                            \n                                    Protected\n                                processPost\n                            \n                            \n                                    Protected\n                                processPut\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/api-generated/api-generated.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        successfully deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        successfully found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \ngetById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        successfully found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(addressToCreate: AddressCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addressToCreate\n                                    \n                                                AddressCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        successfully created\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processDelete(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processGet(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processGetById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processGetById(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processPost\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processPost(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processPut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processPut(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(address: AddressDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                AddressDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        successfully updated\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            jsonParseReviver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'crms-frontend'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'crms-frontend';\n}\n\n    \n\n    \n        \n  \n    \n      \n        Kontakte\n      \n      \n        Veranstaltungen\n      \n      \n        Statistiken\n      \n    \n  \n  \n    \n      \n        \n          menu\n        \n      \n      \n        \n          \n          CRohM\n        \n      \n      \n        \n          \n            \n              contacts -->\n              Kontakte\n            \n          \n          \n            \n              events -->\n              Veranstaltungen\n            \n          \n          \n            \n              statistics -->\n              Statistiken\n            \n          \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                mat-sidenav-container,\nmat-sidenav-content,\nmat-sidenav {\n  height: 100%;\n}\n\nmat-sidenav {\n  width: 250px;\n}\n\na {\n  text-decoration: none;\n  color: white;\n  cursor: pointer;\n}\n\na:hover,\na:active {\n  color: lightgray;\n}\n\n.navigation-items {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  margin-left: 40px;\n}\n\n.icon {\n  display: inline-block;\n  height: 30px;\n  margin: 0 auto;\n  padding-right: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.label {\n  display: inline-block;\n  line-height: 30px;\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Kontakte                    Veranstaltungen                    Statistiken                                          menu                                                CRohM                                                                contacts -->              Kontakte                                                          events -->              Veranstaltungen                                                          statistics -->              Statistiken                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsDetailComponent', 'selector': 'app-contacts-detail'},{'name': 'ContactsListComponent', 'selector': 'app-contacts-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContactsModule\n\nContactsModule\n\nAppModule -->\n\nContactsModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContactsModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './shared/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ContactsModule } from './contacts/contacts.module';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    ContactsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'contacts',\n    loadChildren: () => \"import('./contacts/contacts.module').then(mod => mod.ContactsModule)\"\n  },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Protected\n                                jsonParseReviver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                    Protected\n                                processLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/api-generated/api-generated.ts:313\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(credentials: CredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:323\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                CredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        successful login\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processLogin(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:353\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:312\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:311\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            jsonParseReviver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:313\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contact.html":{"url":"interfaces/Contact.html","title":"interface - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/contacts/contacts.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adresse\n                                \n                                \n                                            Optional\n                                        firma\n                                \n                                \n                                        id\n                                \n                                \n                                        mail\n                                \n                                \n                                        nachname\n                                \n                                \n                                        phone\n                                \n                                \n                                        vorname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adresse\n                                    \n                                \n                                \n                                    \n                                        adresse:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firma\n                                    \n                                \n                                \n                                    \n                                        firma:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nachname\n                                    \n                                \n                                \n                                    \n                                        nachname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vorname\n                                    \n                                \n                                \n                                    \n                                        vorname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contact {\n    id: number;\n    nachname: string;\n    vorname: string;\n    adresse: {\n        land: string;\n        strasse: string;\n        plz: string;\n        ort: string;\n    };\n    mail: string;\n    phone: string;\n    firma?: string;\n}\n\n\n\nexport interface Country {\n    value: string;\n    viewValue: string;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsAddComponent.html":{"url":"components/ContactsAddComponent.html","title":"component - ContactsAddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactsAddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-add/contacts-add.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-add\n            \n\n            \n                styleUrls\n                ./contacts-add.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                contactsForm\n                            \n                            \n                                countries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, service: ContactsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-add/contacts-add.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ContactsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addContact\n                        \n                        \n                    \n                \n            \n            \n                \naddContact()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Contact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactsForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    vorname: ['', Validators.required],\n    nachname: [''],\n    adresse: this.fb.group({\n      land: [''],\n      strasse: [''],\n      plz: ['', Validators.pattern('^[0-9]{5}$')],\n      ort: [''],\n    }),\n    // Validiert auf korrektes E-Mail-Format\n    mail: ['', Validators.email],\n    // Laesst beliebige Anzahl an Ziffern, Leerzeichen und Bindestrichen zu, Muss mit 0 beginnen\n    phone: ['', Validators.pattern('^0[0-9\\- ]*$')]\n    })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Country[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {value: 'Deutschland', viewValue: 'Deutschland'},\n    {value: 'Schweiz', viewValue: 'Schweiz'},\n    {value: 'Österreich', viewValue: 'Österreich'}\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-add/contacts-add.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { Contact, Country } from '../contacts.model';\nimport { ContactsService } from '../contacts.service';\n\n\n\n\n@Component({\n  selector: 'app-contacts-add',\n  templateUrl: './contacts-add.component.html',\n  styleUrls: ['./contacts-add.component.scss']\n})\nexport class ContactsAddComponent implements OnInit {\n  contact: Contact;\n\n  // Liste der im Dropdown angezeigten Laender\n  countries: Country[] = [\n    {value: 'Deutschland', viewValue: 'Deutschland'},\n    {value: 'Schweiz', viewValue: 'Schweiz'},\n    {value: 'Österreich', viewValue: 'Österreich'}\n  ];\n\n  contactsForm = this.fb.group({\n    vorname: ['', Validators.required],\n    nachname: [''],\n    adresse: this.fb.group({\n      land: [''],\n      strasse: [''],\n      plz: ['', Validators.pattern('^[0-9]{5}$')],\n      ort: [''],\n    }),\n    // Validiert auf korrektes E-Mail-Format\n    mail: ['', Validators.email],\n    // Laesst beliebige Anzahl an Ziffern, Leerzeichen und Bindestrichen zu, Muss mit 0 beginnen\n    phone: ['', Validators.pattern('^0[0-9\\- ]*$')]\n    });\n\n  constructor(private fb: FormBuilder, private service: ContactsService) { }\n\n  ngOnInit(): void {\n  }\n\n  addContact() {\n    // Take values from Input-Form\n    this.contact = this.contactsForm.value;\n    // And add a new Contact with the service\n    this.service.addContact(this.contact);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Neuer Kontakt\n            \n        \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n    \n        \n            \n                Adresse\n            \n        \n    \n    \n        \n            \n                Land               \n                \n                    \n                        {{country.viewValue}}\n                    \n                \n                \n            \n        \n    \n    \n        \n            \n                \n            \n            \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n    \n        \n            \n                Kontaktmöglichkeit\n            \n        \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n    \n        Speichern\n    \n    \n        Verwerfen\n    \n\n\n\n\n\n\n    Form Value: {{ contactsForm.value | json }}\n\n\n\n\n    Form Status: {{ contactsForm.status }}\n\n    \n\n    \n                \n                    ./contacts-add.component.scss\n                \n                .contactDetails {\n    margin: 15px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Neuer Kontakt                                                                                                                                                                                Adresse                                                                Land                                                                           {{country.viewValue}}                                                                                                                                                                                                                                                                                                        Kontaktmöglichkeit                                                                                                                                                    Speichern                Verwerfen        Form Value: {{ contactsForm.value | json }}    Form Status: {{ contactsForm.status }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsDetailComponent', 'selector': 'app-contacts-detail'},{'name': 'ContactsListComponent', 'selector': 'app-contacts-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsAddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsDetailComponent.html":{"url":"components/ContactsDetailComponent.html","title":"component - ContactsDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactsDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-detail/contacts-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-detail\n            \n\n            \n                styleUrls\n                ./contacts-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                            \n                                contactsForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-detail/contacts-detail.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-detail/contacts-detail.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-detail/contacts-detail.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Contact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-detail/contacts-detail.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactsForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.fb.group({\n    vorname: ['', Validators.required],\n    nachname: [''],\n    adresse: this.fb.group({\n      strasse: [''],\n      plz: ['', Validators.pattern('^[0-9]{5}$')],\n      ort: [''],\n    })\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-detail/contacts-detail.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { Contact } from '../contacts.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-contacts-detail',\n  templateUrl: './contacts-detail.component.html',\n  styleUrls: ['./contacts-detail.component.scss']\n})\nexport class ContactsDetailComponent implements OnInit {\n  contact: Contact;\n\n  contactsForm = this.fb.group({\n    vorname: ['', Validators.required],\n    nachname: [''],\n    adresse: this.fb.group({\n      strasse: [''],\n      plz: ['', Validators.pattern('^[0-9]{5}$')],\n      ort: [''],\n    })\n  });\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.contact = this.route.snapshot.data.contact;\n    this.contactsForm.patchValue(this.contact);\n  }\n\n\n\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    console.warn(this.contactsForm.value);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                Kontaktdaten\n            \n        \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n    \n        \n            \n                Adresse\n            \n        \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n        \n            \n                \n            \n        \n\n    \n    Speichern\n\n\n\n\n\n\n    Form Value: {{ contactsForm.value | json }}\n\n\n\n\n    Form Status: {{ contactsForm.status }}\n\n    \n\n    \n                \n                    ./contacts-detail.component.scss\n                \n                .contactDetails {\n    margin: 15px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Kontaktdaten                                                                                                                                                                                Adresse                                                                                                                                                                                                    Speichern    Form Value: {{ contactsForm.value | json }}    Form Status: {{ contactsForm.status }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsDetailComponent', 'selector': 'app-contacts-detail'},{'name': 'ContactsListComponent', 'selector': 'app-contacts-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ContactsDetailResolverService.html":{"url":"guards/ContactsDetailResolverService.html","title":"guard - ContactsDetailResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ContactsDetailResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/contacts/contacts-detail-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(cs: ContactsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-detail-resolver.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cs\n                                                  \n                                                        \n                                                                        ContactsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-detail-resolver.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n    Router, Resolve,\n    RouterStateSnapshot,\n    ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of, EMPTY } from 'rxjs';\nimport { mergeMap, take } from 'rxjs/operators';\nimport { Contact } from './contacts.model';\nimport { ContactsService } from './contacts.service';\n\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ContactsDetailResolverService implements Resolve {\n    constructor(private cs: ContactsService, private router: Router) { }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Observable {\n        const id = route.paramMap.get('id');\n\n        return this.cs.getContact(id).pipe(\n            take(1),\n            mergeMap(contact => {\n                if (contact) {\n                    return of(contact);\n                } else { // id not found\n                    return EMPTY;\n                }\n            })\n        );\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactsListComponent.html":{"url":"components/ContactsListComponent.html","title":"component - ContactsListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContactsListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contacts/contacts-list/contacts-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contacts-list\n            \n\n            \n                styleUrls\n                ./contacts-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contacts-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contacts$\n                            \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                deleteContact\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ContactsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts-list/contacts-list.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ContactsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addContact\n                        \n                        \n                    \n                \n            \n            \n                \naddContact()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-list/contacts-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteContact\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteContact(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-list/contacts-list.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts-list/contacts-list.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contacts$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-list/contacts-list.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['vorname', 'nachname', 'adresse', 'action']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts-list/contacts-list.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Contact } from '../contacts.model';\nimport { Observable } from 'rxjs';\nimport { ContactsService } from '../contacts.service';\nimport { ROUTES } from '@angular/router';\n\n@Component({\n  selector: 'app-contacts-list',\n  templateUrl: './contacts-list.component.html',\n  styleUrls: ['./contacts-list.component.scss']\n})\nexport class ContactsListComponent implements OnInit {\n  contacts$: Observable;\n  displayedColumns = ['vorname', 'nachname', 'adresse', 'action'];\n\n  constructor(private service: ContactsService) { }\n\n  ngOnInit() {\n    this.contacts$ = this.service.getContacts();\n  }\n\n  addContact() {\n    console.log('addContact');\n  }\n\n  deleteContact(id: number) {\n    // TODO\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n             Vorname \n             {{element.vorname}}\n            \n        \n        \n             Nachname \n             {{element.nachname}} \n        \n        \n             Adresse \n             {{element.adresse | json}} \n        \n        \n             Aktion \n            \n                \n                    edit\n                \n                \n                    delete\n                \n            \n        \n        \n        \n    \n\n\n\n\n    \n         \n            add Kontakt hinzufügen\n        \n    \n\n    \n\n    \n                \n                    ./contacts-list.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Vorname              {{element.vorname}}                                         Nachname              {{element.nachname}}                              Adresse              {{element.adresse | json}}                              Aktion                                                 edit                                                    delete                                                                                 add Kontakt hinzufügen            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsDetailComponent', 'selector': 'app-contacts-detail'},{'name': 'ContactsListComponent', 'selector': 'app-contacts-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactsListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactsModule.html":{"url":"modules/ContactsModule.html","title":"module - ContactsModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactsModule\n\n\n\ncluster_ContactsModule_declarations\n\n\n\ncluster_ContactsModule_imports\n\n\n\n\nContactsAddComponent\n\nContactsAddComponent\n\n\n\nContactsModule\n\nContactsModule\n\nContactsModule -->\n\nContactsAddComponent->ContactsModule\n\n\n\n\n\nContactsDetailComponent\n\nContactsDetailComponent\n\nContactsModule -->\n\nContactsDetailComponent->ContactsModule\n\n\n\n\n\nContactsListComponent\n\nContactsListComponent\n\nContactsModule -->\n\nContactsListComponent->ContactsModule\n\n\n\n\n\nContactsRoutingModule\n\nContactsRoutingModule\n\nContactsModule -->\n\nContactsRoutingModule->ContactsModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nContactsModule -->\n\nMaterialModule->ContactsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/contacts/contacts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContactsAddComponent\n                        \n                        \n                            ContactsDetailComponent\n                        \n                        \n                            ContactsListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContactsRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContactsListComponent } from './contacts-list/contacts-list.component';\nimport { ContactsDetailComponent } from './contacts-detail/contacts-detail.component';\nimport { MaterialModule } from '../shared/material.module';\nimport { ContactsRoutingModule } from './contacts-routing.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ContactsAddComponent } from './contacts-add/contacts-add.component';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    ContactsRoutingModule,\n    MatSelectModule\n  ],\n  declarations: [\n    ContactsListComponent,\n    ContactsDetailComponent,\n    ContactsAddComponent,\n  ],\n})\nexport class ContactsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactsRoutingModule.html":{"url":"modules/ContactsRoutingModule.html","title":"module - ContactsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/contacts/contacts-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ContactsListComponent } from './contacts-list/contacts-list.component';\nimport { ContactsDetailComponent } from './contacts-detail/contacts-detail.component';\nimport { ContactsDetailResolverService } from './contacts-detail-resolver.service';\nimport { ContactsAddComponent } from './contacts-add/contacts-add.component';\n\nconst contactsRoutes: Routes = [\n    {\n        path: '',\n        component: ContactsListComponent\n    },\n    // 'add' needs to be before ':id' to be recognized\n    {\n        path: 'add',\n        component: ContactsAddComponent,\n    },\n    {\n        path: ':id',\n        component: ContactsDetailComponent,\n        resolve: {\n            contact: ContactsDetailResolverService\n        }\n    }    \n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(contactsRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n     providers: [\n         ContactsDetailResolverService\n     ]\n})\nexport class ContactsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactsService.html":{"url":"injectables/ContactsService.html","title":"injectable - ContactsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContactsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/contacts/contacts.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contacts$\n                            \n                            \n                                    Static\n                                nextId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                getContact\n                            \n                            \n                                getContacts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/contacts/contacts.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addContact\n                        \n                        \n                    \n                \n            \n            \n                \naddContact(contact: Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContact\n                        \n                        \n                    \n                \n            \n            \n                \ngetContact(id: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContacts\n                        \n                        \n                    \n                \n            \n            \n                \ngetContacts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/contacts/contacts.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            contacts$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(CONTACTS)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            nextId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/contacts/contacts.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { Contact } from './contacts.model';\nimport { CONTACTS } from './mock-contacts';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ContactsService {\n    static nextId = 4;\n    private contacts$: BehaviorSubject = new BehaviorSubject(CONTACTS);\n\n    constructor() { }\n\n    getContacts() {\n        return this.contacts$.asObservable();\n    }\n\n    getContact(id: number | string) {\n        return this.getContacts().pipe(\n            map(contacts => contacts.find(contact => contact.id === +id))\n        );\n    }\n\n    addContact(contact: Contact) {\n        contact.id = ContactsService.nextId++;\n        CONTACTS.push(contact);\n        this.contacts$.next(CONTACTS);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Country.html":{"url":"interfaces/Country.html","title":"interface - Country","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/contacts/contacts.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        value\n                                \n                                \n                                        viewValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewValue\n                                    \n                                \n                                \n                                    \n                                        viewValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contact {\n    id: number;\n    nachname: string;\n    vorname: string;\n    adresse: {\n        land: string;\n        strasse: string;\n        plz: string;\n        ort: string;\n    };\n    mail: string;\n    phone: string;\n    firma?: string;\n}\n\n\n\nexport interface Country {\n    value: string;\n    viewValue: string;\n  }\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CredentialsDto.html":{"url":"interfaces/CredentialsDto.html","title":"interface - CredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EducationalOpportunityDto.html":{"url":"interfaces/EducationalOpportunityDto.html","title":"interface - EducationalOpportunityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EducationalOpportunityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                        ects\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ects\n                                    \n                                \n                                \n                                    \n                                        ects:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EducationalOpportunityService.html":{"url":"injectables/EducationalOpportunityService.html","title":"injectable - EducationalOpportunityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EducationalOpportunityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Protected\n                                jsonParseReviver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Protected\n                                processGet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, baseUrl?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/api-generated/api-generated.ts:385\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(ects?: number | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:396\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ects\n                                    \n                                            number | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        (optional) \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        successfully found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processGet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processGet(response: HttpResponseBase)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:426\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                HttpResponseBase\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:384\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:383\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            jsonParseReviver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :      | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:385\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickCounter\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                countClick\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countClick\n                        \n                        \n                    \n                \n            \n            \n                \ncountClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clickCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  public clickCounter = 0;\n  public name = '';\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  countClick() {\n    this.clickCounter++;\n  }\n\n}\n\n    \n\n    \n        \n    CRohM - Customer Relationship Management System\n    \n        This is a platform for managing customer relationships.\n         Click on Contacts to get Started!!!\n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    CRohM - Customer Relationship Management System            This is a platform for managing customer relationships.         Click on Contacts to get Started!!!    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsDetailComponent', 'selector': 'app-contacts-detail'},{'name': 'ContactsListComponent', 'selector': 'app-contacts-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBeer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/http.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBeer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBeer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/http.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  public getBeer() {\n    return this.http.get('https://api.openbrewerydb.org/breweries');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorText\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            redirect\n                        \n                        \n                    \n                \n            \n            \n                \nredirect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('', Validators.required)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('', Validators.required)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../shared/api-generated/api-generated';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  username = new FormControl('', Validators.required);\n  password = new FormControl('', Validators.required);\n  errorText: string;\n\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.authService.login({\n      name: this.username.value,\n      password: this.password.value\n    }).subscribe(result => this.redirect(), error => this.errorText = error);\n  }\n\n  redirect() {\n    this.router.navigate(['/contacts'], { relativeTo: this.route });\n  }\n\n}\n\n    \n\n    \n        \n    Login\n    \n        \n            \n        \n        \n            \n        \n        {{ errorText }}\n    \n    \n        \n            Login \n    \n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .centered {\n    text-align: center;\n    width: 40%;\n    margin: 10px auto;\n\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Login                                                                    {{ errorText }}                            Login     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContactsAddComponent', 'selector': 'app-contacts-add'},{'name': 'ContactsDetailComponent', 'selector': 'app-contacts-detail'},{'name': 'ContactsListComponent', 'selector': 'app-contacts-list'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  imports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatCardModule\n\n  ],\n  exports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    MatCardModule\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwaggerException.html":{"url":"classes/SwaggerException.html","title":"class - SwaggerException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwaggerException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                headers\n                            \n                            \n                                    Protected\n                                isSwaggerException\n                            \n                            \n                                message\n                            \n                            \n                                response\n                            \n                            \n                                result\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isSwaggerException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, status: number, response: string, headers: literal type, result: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/api-generated/api-generated.ts:495\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        headers\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        result\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:494\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isSwaggerException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:507\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:491\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:493\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:495\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/api-generated/api-generated.ts:492\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isSwaggerException\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isSwaggerException(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/api-generated/api-generated.ts:509\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SwaggerException\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/api-generated/api-generated.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        accessToken\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        phoneNumber\n                                \n                                \n                                        twoFactorEnabled\n                                \n                                \n                                            Optional\n                                        userName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                    \n                                \n                                \n                                    \n                                        accessToken:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                    \n                                \n                                \n                                    \n                                        phoneNumber:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        twoFactorEnabled\n                                    \n                                \n                                \n                                    \n                                        twoFactorEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                    \n                                \n                                \n                                    \n                                        userName:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddressesService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successfully found\n     */\n    get(): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully created\n     */\n    post(addressToCreate: AddressCreateDto): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(addressToCreate);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPost(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPost(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPost(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result201);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully found\n     */\n    getById(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetById(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGetById(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully updated\n     */\n    put(address: AddressDto, id: string): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(address);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processPut(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processPut(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processPut(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 409) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"conflict in update process\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n\n    /**\n     * @return successfully deleted\n     */\n    delete(id: number): Observable {\n        let url_ = this.baseUrl + \"/api/Addresses/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf(null);\n            }));\n        } else if (status === 404) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"address not found\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @return successful login\n     */\n    login(credentials: CredentialsDto): Observable {\n        let url_ = this.baseUrl + \"/api/auth\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(credentials);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\", \n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processLogin(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processLogin(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processLogin(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"not successful login\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EducationalOpportunityService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    /**\n     * @param ects (optional) \n     * @return successfully found\n     */\n    get(ects?: number | undefined): Observable {\n        let url_ = this.baseUrl + \"/api/EducationalOpportunity?\";\n        if (ects === null)\n            throw new Error(\"The parameter 'ects' cannot be null.\");\n        else if (ects !== undefined)\n            url_ += \"ects=\" + encodeURIComponent(\"\" + ects) + \"&\"; \n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\t\t\t\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_);\n                } catch (e) {\n                    return >_observableThrow(e);\n                }\n            } else\n                return >_observableThrow(response_);\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable {\n        const status = response.status;\n        const responseBlob = \n            response instanceof HttpResponse ? response.body : \n            (response).error instanceof Blob ? (response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf(null);\n    }\n}\n\nexport interface AddressDto {\n    id?: string | undefined;\n    name?: string | undefined;\n    description?: string | undefined;\n    city?: string | undefined;\n    street?: string | undefined;\n    streetNumber: number;\n    zipcode?: string | undefined;\n    country?: string | undefined;\n}\n\nexport interface AddressCreateDto {\n    name?: string | undefined;\n    description?: string | undefined;\n    city: string;\n    street: string;\n    streetNumber: number;\n    zipcode: string;\n    country: string;\n}\n\nexport interface UserDto {\n    id: number;\n    userName?: string | undefined;\n    email?: string | undefined;\n    phoneNumber?: string | undefined;\n    twoFactorEnabled: boolean;\n    accessToken?: string | undefined;\n}\n\nexport interface CredentialsDto {\n    name: string;\n    password: string;\n}\n\nexport interface EducationalOpportunityDto {\n    id: number;\n    name?: string | undefined;\n    description?: string | undefined;\n    ects: number;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number; \n    response: string; \n    headers: { [key: string]: any; };\n    result: any; \n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable {\n    return new Observable((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader(); \n            reader.onload = event => { \n                observer.next((event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob); \n        }\n    });\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-add/contacts-add.component.ts\n            \n            component\n            ContactsAddComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-detail-resolver.service.ts\n            \n            guard\n            ContactsDetailResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-detail/contacts-detail.component.ts\n            \n            component\n            ContactsDetailComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts-list/contacts-list.component.ts\n            \n            component\n            ContactsListComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts.model.ts\n            \n            interface\n            Contact\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts.model.ts\n            \n            interface\n            Country\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/contacts/contacts.service.ts\n            \n            injectable\n            ContactsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/contacts/mock-contacts.ts\n            \n            variable\n            CONTACTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            class\n            SwaggerException\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            injectable\n            AddressesService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            injectable\n            EducationalOpportunityService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            interface\n            AddressCreateDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            interface\n            AddressDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            interface\n            CredentialsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            interface\n            EducationalOpportunityDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            function\n            blobToText\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            function\n            throwException\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/api-generated/api-generated.ts\n            \n            variable\n            API_BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/http.service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.0.7\n        \n            @angular/cdk : ~9.1.3\n        \n            @angular/common : ~9.0.7\n        \n            @angular/compiler : ~9.0.7\n        \n            @angular/core : ~9.0.7\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/forms : ~9.0.7\n        \n            @angular/material : ^9.1.3\n        \n            @angular/platform-browser : ~9.0.7\n        \n            @angular/platform-browser-dynamic : ~9.0.7\n        \n            @angular/router : ~9.0.7\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.4.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            blobToText   (src/.../api-generated.ts)\n                        \n                        \n                            throwException   (src/.../api-generated.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/api-generated/api-generated.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            blobToText\n                        \n                        \n                    \n                \n            \n            \n                \nblobToText(blob: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    blob\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            throwException\n                        \n                        \n                    \n                \n            \n            \n                \nthrowException(message, status, response, headers, result?: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headers\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCrmsFrontend\nThis project was generated with Angular CLI version 8.3.21.\nDevelopment server\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ContactsModule\n\n\n\ncluster_ContactsModule_declarations\n\n\n\ncluster_ContactsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContactsModule\n\nContactsModule\n\nAppModule -->\n\nContactsModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\nContactsModule -->\n\nMaterialModule->ContactsModule\n\n\n\n\n\nContactsAddComponent\n\nContactsAddComponent\n\nContactsModule -->\n\nContactsAddComponent->ContactsModule\n\n\n\n\n\nContactsDetailComponent\n\nContactsDetailComponent\n\nContactsModule -->\n\nContactsDetailComponent->ContactsModule\n\n\n\n\n\nContactsListComponent\n\nContactsListComponent\n\nContactsModule -->\n\nContactsListComponent->ContactsModule\n\n\n\n\n\nContactsRoutingModule\n\nContactsRoutingModule\n\nContactsModule -->\n\nContactsRoutingModule->ContactsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_BASE_URL   (src/.../api-generated.ts)\n                        \n                        \n                            CONTACTS   (src/.../mock-contacts.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/api-generated/api-generated.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('API_BASE_URL')\n                        \n                    \n\n\n            \n        \n\n    src/app/contacts/mock-contacts.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTACTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Contact[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        id: 0,\n        vorname: 'Max',\n        nachname: 'Mustermann',\n        adresse: {\n            land: 'Deutschland',\n            strasse: 'Teststrasse 1',\n            ort: 'Nürnberg',\n            plz: '12345'\n        },\n        mail: 'maxmustermann@getMaxListeners.com',\n        phone: '0157 0011223344'\n    },\n    {\n        id: 1,\n        vorname: 'Judith',\n        nachname: 'Androthe',\n        adresse: {\n            land: 'Deutschland',\n            strasse: 'Teststrasse 2',\n            ort: 'Nürnberg',\n            plz: '12345'\n        },\n        mail: 'judithandrothe@getMaxListeners.com',\n        phone: '0157 0011223355'\n    },\n    {\n        id: 2,\n        vorname: 'Julia',\n        nachname: 'Stoh',\n        adresse: {\n            land: 'Deutschland',\n            strasse: 'Teststrasse 3',\n            ort: 'Nürnberg',\n            plz: '12345'\n        },\n        mail: 'juliastoh@getMaxListeners.com',\n        phone: '0157 0011223366'\n    },\n    {\n        id: 3,\n        vorname: 'Andreas',\n        nachname: 'Meier',\n        adresse: {\n            land: 'Deutschland',\n            strasse: 'Teststrasse 15',\n            ort: 'Nürnberg',\n            plz: '12345'\n        },\n        mail: 'andreasmeier@getMaxListeners.com',\n        phone: '0157 0011223377'\n    }\n]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
