name: CI_Build
on:
  push:

jobs:
  build_frontend:
    runs-on: windows-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: Install Dependencies
      run: |
        cd frontend
        npm ci

    - name: Build
      run: |
        cd frontend
        npm run build -- --output-path=dist

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: frontend-dist
        path: frontend/dist/*

  build_backend:
    runs-on: windows-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0

    - name: Install Dependencies
      run: dotnet restore ./backend/WebApi/WebApi.csproj

    - name: Build
      run: dotnet publish ./backend/WebApi/WebApi.csproj -c Release -o ./backend-dist

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend-dist
        path: backend-dist/*

  build_docker:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build and Push
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        add_git_labels: true
        repository: crohmcrms/crohm_crms
        tag_with_ref: true
        tag_with_sha: true

  build_app:
    needs: [build_frontend, build_backend]
    runs-on: windows-latest
    steps:

    - name: Download Backend Artifact
      uses: actions/download-artifact@v2
      with:
        name: backend-dist
        path: app

    - name: Download Frontend Artifact
      uses: actions/download-artifact@v2
      with:
        name: frontend-dist
        path: app/wwwroot

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-dist
        path: app/*

  test_docker:
    needs: build_docker
    runs-on: ubuntu-latest
    steps:
      
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Start Docker Compose
      run: sh ./misc/docker-compose-up.sh
    
    - name: Wait till stack is up
      uses: jakejarvis/wait-action@master
      with:
        time: '20s'
        
    - name: Check if container is up
      id: curl_output
      run: curl --fail --insecure https://localhost/health
    
    
    
      
        
