name: Continuous Integration and Deployment
on:
  push:

jobs:
  build_frontend:
    runs-on: windows-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12'

    - name: Get NPM Cache Directory
      id: npm-cache
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: NPM Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: |
        cd frontend
        npm ci

    - name: Build
      run: |
        cd frontend
        npm run build -- --output-path=dist

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: frontend-dist
        path: frontend/dist/*

  build_backend:
    runs-on: windows-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0

    - name: Install Dependencies
      run: dotnet restore ./backend/WebApi/WebApi.csproj

    - name: Build
      run: dotnet publish ./backend/WebApi/WebApi.csproj -c Release -o ./backend-dist

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend-dist
        path: backend-dist/*

  build_docker:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # - name: Get Branchname and SHA
    #   run: |
    #     echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF##*/})"
    #     echo "::set-env name=SHA7::$(echo sha-${GITHUB_SHA::7})"

    # - name: Build and Push
    #   uses: whoan/docker-build-with-cache-action@v5
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #     image_name: crohmcrms/crohm_crms
    #     image_tag: ${{ env.BRANCH_NAME }},${{ env.SHA7 }}

    - name: Build and Push
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        add_git_labels: true
        repository: crohmcrms/crohm_crms
        tag_with_ref: true
        tag_with_sha: true


  build_app:
    needs: [build_frontend, build_backend]
    runs-on: windows-latest
    steps:

    - name: Download Backend Artifact
      uses: actions/download-artifact@v2
      with:
        name: backend-dist
        path: app

    - name: Download Frontend Artifact
      uses: actions/download-artifact@v2
      with:
        name: frontend-dist
        path: app/wwwroot

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-dist
        path: app/*

  test_integration:
    needs: build_docker
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # - name: Setup Node.js
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: '12'

    - name: Start Server
      run: bash ./misc/docker-compose-up.sh

    - name: Waiting for Server
      run: bash ./misc/wait-for-server.sh

    - name: Test
      uses: cypress-io/github-action@v2
      with:
        working-directory: tests

    - name: Collect Report
      if: ${{ always() }}
      uses: shyim/junit-report-annotations-action@0.2.0
      with:
        accessToken: ${{ secrets.GITHUB_TOKEN }}
        jobName: 'test_integration'
        path: tests/reports/cypress.xml

    - name: Collect Report
      if: ${{ always() }}
      uses: ashley-taylor/junit-report-annotations-action@1.3
      with:
        accessToken: ${{ secrets.GITHUB_TOKEN }}
        name: 'test_integration'
        path: tests/reports/cypress.xml

    - name: Stop Server
      if: ${{ always() }}
      run: bash ./misc/docker-compose-down.sh

    - name: Upload Screenshot Artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: test_integration_screenshots
        path: tests/screenshots/*

    - name: Upload Video Artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: test_integration_videos
        path: tests/videos/*
